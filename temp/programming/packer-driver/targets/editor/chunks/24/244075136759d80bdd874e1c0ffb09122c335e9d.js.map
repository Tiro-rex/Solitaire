{"version":3,"sources":["file:///D:/GAMIXLABS/Solitaire/assets/Script/GameManager.ts"],"names":["_decorator","Component","Node","Collider2D","Contact2DType","ccclass","property","GameManager","onLaod","coll","stack1","getComponent","on","BEGIN_CONTACT","onBeginContact","self","other","console","log","tag"],"mappings":";;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAA2EC,MAAAA,U,OAAAA,U;AAAWC,MAAAA,a,OAAAA,a;;;;;;;OAEhH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;6BAGjBO,W,WADZF,OAAO,CAAC,aAAD,C,UAGJC,QAAQ,CAACJ,IAAD,C,UAERI,QAAQ,CAACJ,IAAD,C,UAERI,QAAQ,CAACJ,IAAD,C,UAERI,QAAQ,CAACJ,IAAD,C,UAERI,QAAQ,CAACJ,IAAD,C,UAERI,QAAQ,CAACJ,IAAD,C,UAERI,QAAQ,CAACJ,IAAD,C,2BAfZ,MACaK,WADb,SACiCN,SADjC,CAC2C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAiBxCO,QAAAA,MAAM,GAAG;AACN,cAAIC,IAAI,GAAG,KAAKC,MAAL,CAAYC,YAAZ,CAAyBR,UAAzB,CAAX;AACAM,UAAAA,IAAI,CAACG,EAAL,CAAQR,aAAa,CAACS,aAAtB,EAAqC,KAAKC,cAA1C,EAA0D,IAA1D;AACF;;AACDA,QAAAA,cAAc,CAACC,IAAD,EAAmBC,KAAnB,EAAsC;AAEjDC,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBH,IAAI,CAACI,GAAzB;AACAF,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAAK,CAACG,GAA3B,EAHiD,CAIjD;AACA;AACA;AACA;AACF;;AA7BuC,O","sourcesContent":["import { _decorator, Component, Node, Vec3, Vec2, Touch, EventMouse, instantiate, director, BoxCollider2D, Collider2D,Contact2DType } from 'cc';\nimport ReaveldCard from './ReaveldCard';\nconst { ccclass, property } = _decorator;\n\n@ccclass('GameManager')\nexport class GameManager extends Component {\n\n   @property(Node)\n   stack1: Node\n   @property(Node)\n   stack2: Node\n   @property(Node)\n   stack3: Node\n   @property(Node)\n   stack4: Node\n   @property(Node)\n   stack5: Node\n   @property(Node)\n   stack6: Node\n   @property(Node)\n   stack7: Node\n\n   onLaod() {\n      let coll = this.stack1.getComponent(Collider2D);\n      coll.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\n   }\n   onBeginContact(self: Collider2D, other: Collider2D) {\n\n      console.log(\"self\", self.tag);\n      console.log(\"other\", other.tag);\n      // let selfcollider = event.selfCollider;\n      // let otherCollider = event.otherCollider;\n      // console.log(\"self\", selfcollider);\n      // console.log(\"other\", otherCollider);\n   }\n\n}\n\n"]}