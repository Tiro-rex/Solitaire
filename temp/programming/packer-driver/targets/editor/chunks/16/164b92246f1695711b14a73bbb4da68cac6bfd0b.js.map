{"version":3,"sources":["file:///D:/GAMIXLABS/Solitaire%20-%20Copy/assets/Script/ReaveldCard.ts"],"names":["_decorator","Component","Node","Label","Vec2","Vec3","Color","PosSnap","StackPos","TouchEnd","ccclass","property","ReaveldCard","cardColor","cardace","cardNumber","touchStart","offSet","newPosition","lastPosition","zoomPercentage","lastZoomPercentage","gameS","parentToCheck","value","valueString","suitofCard","touchEndPos","onLaod","init","data","cardFace","string","suit","cardRank","rank","cardRank2","color","node","on","EventType","TOUCH_START","onTouchStart","bind","TOUCH_MOVE","onMoveStart","TOUCH_END","onTouchEnd","e","getUILocation","subtract","getParent","getPosition","console","log","name","nodePos","setPosition","x","y","window","moveCard","p","TouchEndS1","xl","xr","removeFromParent","emit","cardPos","stack1","Child","TouchEndS2","stack2","parent","TouchEndS3","stack3","TouchEndS4","stack4","TouchEndS5","stack5","TouchEndS6","stack6","TouchEndS7","stack7"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, TERRAIN_HEIGHT_BASE, color, Label, Vec2, Vec3, Touch, Color, math, systemEvent } from 'cc';\r\nimport { SUPPORT_JIT } from 'cc/env';\r\nimport { cardMove, cardRanks, Colour, DCard, PosSnap, Ranks, StackPos, Suits, TouchEnd } from './GameConstant';\r\nimport { GameScreen } from './GameScreen';\r\nconst { ccclass, property } = _decorator;\r\n\r\n\r\n@ccclass('ReaveldCard')\r\nexport default class ReaveldCard extends Component {\r\n    @property(Label)\r\n    cardRank: Label;\r\n    @property(Label)\r\n    cardRank2: Label;\r\n    @property(Label)\r\n    cardFace: Label;\r\n    @property(Node)\r\n    faceUp: Node;\r\n    @property(Node)\r\n    faceDown: Node;\r\n\r\n    public cardColor: string;\r\n    public cardace: string;\r\n    public cardNumber: string;\r\n    public touchStart = new Vec2();\r\n    public offSet = new Vec2();\r\n    public newPosition = new Vec3();\r\n    public lastPosition = new Vec2()\r\n    public zoomPercentage = 100;\r\n    public lastZoomPercentage = 100;\r\n    public gameS: GameScreen;\r\n    public parentToCheck: string;\r\n    public value: number;\r\n    public valueString: string;\r\n    suitofCard: any;\r\n    touchEndPos: Vec2;\r\n\r\n\r\n\r\n    onLaod() {\r\n    }\r\n    init(data) {\r\n        // let get = this.game.Shuffel(data)\r\n        // console.log(get);\r\n\r\n        // this.rankValue(data.rank);\r\n        this.cardFace.string = data.suit;\r\n        this.cardRank.string = data.rank;\r\n        this.cardRank2.string = data.rank;\r\n        this.value = data.value\r\n        this.cardNumber = data.rank;\r\n        if (this.cardFace.string == '♥' || this.cardFace.string == '♦') {\r\n            this.cardace = data.suit;\r\n            this.cardRank.color = new Color(255, 0, 0);\r\n            this.cardRank2.color = new Color(255, 0, 0);\r\n            this.cardFace.color = new Color(255, 0, 0);\r\n        }\r\n        else if (this.cardFace.string == '♠' || this.cardFace.string == '♣') {\r\n            this.cardRank.color = new Color(0, 0, 0, 255);\r\n            this.cardRank2.color = new Color(0, 0, 0, 255);\r\n            this.cardFace.color = new Color(0, 0, 0, 255);\r\n        }\r\n        this.node.on(Node.EventType.TOUCH_START, this.onTouchStart.bind(this));\r\n        this.node.on(Node.EventType.TOUCH_MOVE, this.onMoveStart.bind(this));\r\n        this.node.on(Node.EventType.TOUCH_END, this.onTouchEnd.bind(this));\r\n    }\r\n\r\n    onTouchStart(e: Touch) {\r\n\r\n\r\n        this.touchStart = e.getUILocation();\r\n        Vec2.subtract(this.offSet, this.node.getParent().getPosition() as unknown as Vec2, this.touchStart);\r\n        console.log(\"heyys\", this.cardace, this.cardNumber, this.value);\r\n        // console.log(\"Parent\", this.node)\r\n        this.parentToCheck = this.node.getParent().name;\r\n\r\n    }\r\n    onMoveStart(e: Touch | null) {\r\n        this.lastPosition = e.getUILocation();\r\n        Vec2.subtract(this.offSet, this.touchStart, this.lastPosition);\r\n        let nodePos = this.node.getPosition() as unknown as Vec2;\r\n        this.node.setPosition(nodePos.x - this.offSet.x, nodePos.y - this.offSet.y, 0.5);\r\n        this.touchStart = this.lastPosition;\r\n        window.moveCard = true;\r\n    }\r\n    onTouchEnd(p: Touch | null) {\r\n        // console.log(\"PostionAtTheTouchEnd\", p.getUILocation());\r\n        let touchEndPos = p.getUILocation();\r\n\r\n        let nodePos = this.node.getPosition() as unknown as Vec2;\r\n        console.log(\"pa\", touchEndPos.x)\r\n        console.log(\"posxl\", TouchEnd.TouchEndS1);\r\n        // console.log(\"posxr\",);\r\n\r\n        if (touchEndPos.x < TouchEnd.TouchEndS1.xl && touchEndPos.x > TouchEnd.TouchEndS1.xr) {\r\n            this.node.removeFromParent()\r\n            PosSnap.emit(\"stackPos\", { cardPos: StackPos.stack1, Child: this.node });\r\n        }\r\n\r\n        if (touchEndPos.x < TouchEnd.TouchEndS2.xl && touchEndPos.x > TouchEnd.TouchEndS2.xr) {\r\n            this.node.removeFromParent()\r\n            PosSnap.emit(\"stackPos\", { cardPos: StackPos.stack2, Child: this.node, parent: this.node.getParent() });\r\n        }\r\n\r\n        if (touchEndPos.x < TouchEnd.TouchEndS3.xl && touchEndPos.x > TouchEnd.TouchEndS3.xr) {\r\n            this.node.removeFromParent()\r\n            PosSnap.emit(\"stackPos\", { cardPos: StackPos.stack3, Child: this.node });\r\n        }\r\n\r\n        if (touchEndPos.x < TouchEnd.TouchEndS4.xl && touchEndPos.x > TouchEnd.TouchEndS4.xr) {\r\n            this.node.removeFromParent()\r\n            // console.log(\"heyy\");\r\n            PosSnap.emit(\"stackPos\", { cardPos: StackPos.stack4, Child: this.node });\r\n        }\r\n\r\n        if (touchEndPos.x < TouchEnd.TouchEndS5.xl && touchEndPos.x > TouchEnd.TouchEndS5.xr) {\r\n            this.node.removeFromParent()\r\n            PosSnap.emit(\"stackPos\", { cardPos: StackPos.stack5, Child: this.node });\r\n        }\r\n\r\n        if (touchEndPos.x < TouchEnd.TouchEndS6.xl && touchEndPos.x > TouchEnd.TouchEndS6.xr) {\r\n            this.node.removeFromParent()\r\n            PosSnap.emit(\"stackPos\", { cardPos: StackPos.stack6, Child: this.node });\r\n        }\r\n\r\n        if (touchEndPos.x < TouchEnd.TouchEndS7.xl && touchEndPos.x > TouchEnd.TouchEndS7.xr) {\r\n            // this.node.removeFromParent()\r\n            PosSnap.emit(\"stackPos\", { cardPos: StackPos.stack7, Child: this.node, parent: this.node.getParent() });\r\n        }\r\n\r\n\r\n        // if (this.parentToCheck.toString() == 'ReavledCard') {\r\n        //     //console.log(\"herere_==><\")\r\n        //     DCard.emit(\"fromDeck\", this.node);\r\n        // }\r\n        // else {\r\n        //     // console.log(this.parentToCheck.toString());\r\n        //     cardMove.emit(\"snapCard\", this.node);\r\n        // }\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n"]}