{"version":3,"sources":["file:///D:/GAMIXLABS/Solitaire/assets/Script/ReaveldCard.ts"],"names":["_decorator","Component","Node","Label","Vec2","Vec3","CARDS_ARRAY","ccclass","property","ReaveldCard","cardColor","cardFace","cardNumber","isMoving","distance","touchStart","offSet","newPosition","lastPosition","init","node","on","EventType","TOUCH_START","onTouchStart","bind","TOUCH_MOVE","onMoveStart","TOUCH_END","onTouchEnd","e","console","log","getUILocation","swapNode","uiPosition","subtract","nodePos","getWorldPosition","x","y","randCardGenrate","i","length"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, TERRAIN_HEIGHT_BASE, color, Label, Vec2, Vec3, Touch } from 'cc';\nimport { Color, Ranks, Suits } from './GameConstant';\nimport { CARDS_ARRAY } from './GameConstant';\nconst { ccclass, property } = _decorator;\n\n\n@ccclass('ReaveldCard')\nexport default class ReaveldCard extends Component {\n    @property(Label)\n    cardRank: Label;\n    @property(Label)\n    cardface: Label;\n\n\n    cardColor: string;\n    cardFace: string;\n    cardNumber: string;\n    isMoving: boolean;\n    distance: number;\n    touchStart = new Vec2();\n    offSet = new Vec2();\n    newPosition = new Vec3();\n    lastPosition = new Vec2()\n\n    init() {\n        this.node.on(Node.EventType.TOUCH_START, this.onTouchStart.bind(this));\n        this.node.on(Node.EventType.TOUCH_MOVE, this.onMoveStart.bind(this));\n        this.node.on(Node.EventType.TOUCH_END, this.onTouchEnd.bind(this));\n    }\n    onTouchStart(e: Touch) {\n        console.log(\"heyys\");\n        // if (e._allTouches.length == 1) {\n        //     this.distance = 0;\n        //     this.distance = Vec2.distance(e._allTouches[0]._point, e._allTouches[1]._point);\n        // }\n        this.touchStart = e.getUILocation();\n        console.log(\"heyys\", this.touchStart);\n\n        // }\n\n    }\n    onMoveStart(e: Touch) {\n        // if (e._allTouches.length == 2) {\n        //     this.zoomNode(e)\n        // }\n        // if (e._allTouches.length == 1) {\n        console.log(\"heyys3 \", e.getUILocation);\n            this.swapNode(e);\n        //     this.isMoving = true;\n        // }\n    }\n    onTouchEnd(e: Touch) {\n        // this.isMoving = false;\n        // console.log(\"touchend : \", this.newPosition)\n        console.log(\"heyys\", e);\n        // this.node.worldPosition = this.newPosition;\n    }\n    swapNode(e) {\n\n        let uiPosition = e.getUILocation();\n        Vec2.subtract(this.offSet, uiPosition, this.touchStart);\n        this.touchStart = uiPosition;\n        let nodePos = this.node.getWorldPosition() as unknown as Vec2;\n        this.newPosition = new Vec3(nodePos.x - this.offSet.x, nodePos.y - this.offSet.y, 0);\n\n    }\n    randCardGenrate() {\n        for (let i = 0; i < CARDS_ARRAY.length; i++) {\n\n        }\n\n    }\n}\n\n"]}