{"version":3,"sources":["file:///D:/GAMIXLABS/Solitaire/assets/Script/GameScreen.ts"],"names":["_decorator","Component","Node","Prefab","instantiate","ccclass","property","GameScreen","arrayOfCard","h","start","OnClick","getDeckOfCard","i","card","cardPrefeb","reaveldCard","addChild","push","console","log","update","deltaTime"],"mappings":";;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;;;;;;;OACxC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;4BAGjBO,U,WADZF,OAAO,CAAC,YAAD,C,UAEHC,QAAQ,CAACH,MAAD,C,UAERG,QAAQ,CAACJ,IAAD,C,2BAJb,MACaK,UADb,SACgCN,SADhC,CAC0C;AAAA;AAAA;;AAAA;;AAAA;;AAAA,eAUtCO,WAVsC,GAUjB,EAViB;AAAA,eAWtCC,CAXsC;AAAA;;AAatCC,QAAAA,KAAK,GAAG,CAEP;;AACDC,QAAAA,OAAO,GAAG;AACN,eAAKC,aAAL;AACH;;AACDA,QAAAA,aAAa,GAAG;AACZ;AACA,cAAI,KAAKH,CAAL,IAAU,CAAd,EAAiB;AACb,iBAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAExB,kBAAIC,IAAI,GAAGV,WAAW,CAAC,KAAKW,UAAN,CAAtB;AACA,mBAAKC,WAAL,CAAiBC,QAAjB,CAA0BH,IAA1B;AACA,mBAAKL,CAAL,GAAS,KAAKD,WAAL,CAAiBU,IAAjB,CAAsBJ,IAAtB,CAAT;AACAK,cAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,KAAKX,CAA1B;AACA;AACH;AACJ;AACJ,SA/BqC,CAgCtC;;;AAEAY,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AApCqC,O","sourcesContent":["\nimport { _decorator, Component, Node, Prefab, instantiate } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('GameScreen')\nexport class GameScreen extends Component {\n    @property(Prefab)\n    cardPrefeb: Prefab;\n    @property(Node)\n    reaveldCard: Node;\n\n\n\n\n\n    arrayOfCard: any[] = [];\n    h: any\n\n    start() {\n\n    }\n    OnClick() {\n        this.getDeckOfCard();\n    }\n    getDeckOfCard() {\n        //console.log(\"dhoom dhoom\");\n        if (this.h == 3) {\n            for (let i = 0; i < 1; i++) {\n\n                let card = instantiate(this.cardPrefeb);\n                this.reaveldCard.addChild(card);\n                this.h = this.arrayOfCard.push(card);\n                console.log(\"Array\", this.h);\n                break;\n            }\n        }\n    }\n    //}\n\n    update(deltaTime: number) {\n\n    }\n}\n\n"]}