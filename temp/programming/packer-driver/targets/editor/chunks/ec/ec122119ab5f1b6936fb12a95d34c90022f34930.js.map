{"version":3,"sources":["file:///D:/GAMIXLABS/Solitaire/assets/Script/Pile.ts"],"names":["_decorator","Component","Vec2","Collider2D","PhysicsSystem2D","Contact2DType","cardMove","ReaveldCard","ccclass","property","Pile","offSet","cardR","snapParent","snapcard","start","instance","enable","coll","node","getComponent","on","BEGIN_CONTACT","onBeginContact","init","array","len","count","i","delay","addChild","children","faceDown","active","self","other","snapCardToParent","card","getParent","console","log","removeChild","index","length","removeListener","SortAlgo","milliseconds","Promise","resolve","setTimeout"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Prefab, instantiate, EventMouse, Touch, Vec2, Vec3, Button, Collider2D, PhysicsSystem2D, Contact2DType } from 'cc';\nimport { Card } from './Card';\nimport { cardMove, CARDS_ARRAY } from './GameConstant';\nimport { GameScreen } from './GameScreen';\nimport ReaveldCard from './ReaveldCard';\nconst { ccclass, property } = _decorator;\n\n\n@ccclass('Pile')\nexport class Pile extends Component {\n\n    offSet = new Vec2();\n\n    public cardR: ReaveldCard;\n    snapParent: Node;\n    snapcard: boolean = false;\n\n    start() {\n        PhysicsSystem2D.instance.enable = true;\n        let coll = this.node.getComponent(Collider2D);\n        coll.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\n        // this.cardR.getComponent(ReaveldCard)\n    }\n\n    async init(array, len, count) {\n        //console.log(array, len, count);\n        for (let i = 0; i < len; i++) {\n            await this.delay(200, this.node.addChild(array[count - 1 + i]));\n\n        }\n        this.node.children[len - 1].getComponent(ReaveldCard).faceDown.active = false;\n\n    }\n    onBeginContact(self: Collider2D, other: Collider2D) {\n        this.snapParent = self.node;\n        // if (self.tag == 1 && window.moveCard) {\n        cardMove.on(\"snapCard\", this.snapCardToParent, this)\n        this.snapcard = true;\n        // console.log(\"stack-->\", self.tag);\n        // console.log(\"SnapP\", this.snapParent);\n        // console.log(\"here----> <\");\n        //   //  }\n        //     if (self.tag == 2 && window.moveCard) {\n        //         cardMove.on(\"snapCard\", this.snapCardToParent, this)\n        //         this.snapcard = true;\n        //         console.log(\"stack-->\", self.tag);\n        //     }\n        //     if (self.tag == 3 && window.moveCard) {\n        //         console.log(\"stack-->\", self.tag);\n        //         this.snapcard = true;\n        //         cardMove.on(\"snapCard\", this.snapCardToParent, this)\n        //     }\n        //     if (self.tag == 4 && window.moveCard) {\n        //         cardMove.on(\"snapCard\", this.snapCardToParent, this)\n        //         this.snapcard = true;\n        //         console.log(\"stack-->\", self.tag);\n        //     }\n        //         cardMove.on(\"snapCard\", this.snapCardToParent, this)\n        //         this.snapcard = true;\n        //     if (self.tag == 5 && window.moveCard) {\n        //         console.log(\"stack-->\", self.tag);\n        //     }\n        //     if (self.tag == 6 && window.moveCard) {\n        //         cardMove.on(\"snapCard\", this.snapCardToParent, this)\n        //         this.snapcard = true;\n        //         console.log(\"stack-->\", self.tag);\n        //     }\n        //     if (self.tag == 7 && window.moveCard) {\n        //         cardMove.on(\"snapCard\", this.snapCardToParent, this)\n        //         this.snapcard = true;\n        //         console.log(\"stack-->\", self.tag);\n        //     }\n    }\n\n\n    snapCardToParent(card, len) {\n        // console.log(\"Card In Snap\", card);\n        // console.log(\"before 1-->\", this.snapParent.children.length);\n        // console.log(\"before 2-->\", this.node.children.length);\n        // if (this.snapcard) {\n        card.getParent()\n        console.log(\"heerear-=-=>\",card.getParent());\n        this.node.removeChild(card);\n        let index = this.node.children.length;\n        this.snapParent.addChild(card);\n        cardMove.removeListener(\"snapCard\", this.snapCardToParent, this)\n        this.node.children[index - 1].getComponent(ReaveldCard).faceDown.active = false;\n        // }\n        //console.log(\"hereris the LastIndex\", lastindex)\n        // console.log(\"after 1-->\", this.snapParent.children.length);\n        // console.log(\"after 2-->\", this.node.children.length);\n\n    }\n\n    //Algo\n    SortAlgo() {\n        ///  this.node.removeChild\n    }\n    delay(milliseconds: number, count): Promise<number> {\n        return new Promise<number>(resolve => {\n            setTimeout(() => {\n                resolve(count);\n            }, milliseconds);\n        });\n    }\n}"]}