{"version":3,"sources":["file:///D:/GAMIXLABS/Solitaire/assets/Script/ReaveldCard.ts"],"names":["_decorator","Component","Node","Label","Vec2","Vec3","ccclass","property","ReaveldCard","cardColor","cardFace","cardNumber","isMoving","distance","touchStart","offSet","newPosition","lastPosition","zoomPercentage","lastZoomPercentage","init","node","on","EventType","TOUCH_START","onTouchStart","bind","TOUCH_MOVE","onMoveStart","TOUCH_END","onTouchEnd","e","_allTouches","length","_point","getUILocation","subtract","getParent","getPosition","movsd","nodePos","console","log","setPosition","x","y","move","uiPosition","getWorldPosition","xAsis","yAxis","zoomPercentDiff","lx","dy","uy","rx"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, TERRAIN_HEIGHT_BASE, color, Label, Vec2, Vec3, Touch } from 'cc';\nimport { Color, Ranks, Suits } from './GameConstant';\nimport { CARDS_ARRAY } from './GameConstant';\nconst { ccclass, property } = _decorator;\n\n\n@ccclass('ReaveldCard')\nexport default class ReaveldCard extends Component {\n    @property(Label)\n    cardRank: Label;\n    @property(Label)\n    cardface: Label;\n\n\n    cardColor: string;\n    cardFace: string;\n    cardNumber: string;\n    isMoving: boolean;\n    distance: number;\n    touchStart = new Vec2();\n    offSet = new Vec2();\n    newPosition = new Vec3();\n    lastPosition = new Vec2()\n    zoomPercentage = 100;\n    lastZoomPercentage = 100;\n\n\n\n\n    init() {\n        this.node.on(Node.EventType.TOUCH_START, this.onTouchStart.bind(this));\n        this.node.on(Node.EventType.TOUCH_MOVE, this.onMoveStart.bind(this));\n        this.node.on(Node.EventType.TOUCH_END, this.onTouchEnd.bind(this));\n    }\n    onTouchStart(e: Touch) {\n        if (e._allTouches.length == 2) {\n            this.distance = 0;\n            this.distance = Vec2.distance(e._allTouches[0]._point, e._allTouches[1]._point);\n        }\n\n        this.touchStart = e.getUILocation();\n        Vec2.subtract(this.offSet, this.node.getParent().getPosition() as unknown as Vec2, this.touchStart);\n        // console.log(\"heyys\", this.touchStart);\n\n\n\n    }\n    onMoveStart(e: Touch) {\n        // if (e._allTouches.length == 1) {\n\n        // this.move(e);\n        // }\n        let movsd = e.getUILocation();\n        Vec2.subtract(this.offSet, this.touchStart, movsd);\n        let nodePos = this.node.getPosition() as unknown as Vec2;\n        console.log(\"heyys3 \", movsd, this.node.getPosition());\n        this.node.setPosition(nodePos.x + this.offSet.x, nodePos.y + this.offSet.y, 0.5);\n        this.touchStart = movsd;\n        // this.node.worldPosition = this.newPosition;\n\n\n    }\n    onTouchEnd(e: Touch) {\n\n        console.log(\"heyys\", e);\n        //  this.node.worldPosition = this.newPosition;\n        // console.log(\"Position\", this.node.worldPosition);\n    }\n    move(e: Touch) {\n        let uiPosition = e.getUILocation();\n        Vec2.subtract(this.offSet, uiPosition, this.touchStart);\n        this.touchStart = uiPosition;\n        let nodePos = this.node.getWorldPosition() as unknown as Vec2;\n        let xAsis = nodePos.x - this.offSet.x;\n        let yAxis = nodePos.y - this.offSet.y;\n        let zoomPercentDiff = this.zoomPercentage - 100;\n        const lx = (-540 + ((540 * zoomPercentDiff) / 100))\n        const dy = (420 + ((960 * zoomPercentDiff) / 100))\n        const uy = (1500 - ((960 * zoomPercentDiff) / 100))\n        const rx = (1620 - ((540 * zoomPercentDiff) / 100))\n        if ((xAsis < lx) && (yAxis < dy)) {\n            this.newPosition = new Vec3(lx, dy, 0);\n        }\n        else if ((xAsis < lx) && (yAxis > uy)) {\n            this.newPosition = new Vec3(lx, uy, 0);\n        }\n        else if ((xAsis > rx) && (yAxis < dy)) {\n            this.newPosition = new Vec3(rx, dy, 0);\n        }\n        else if ((xAsis > rx) && (yAxis > uy)) {\n            this.newPosition = new Vec3(rx, uy, 0);\n        }\n        else if (xAsis > rx) {\n            this.newPosition = new Vec3(rx, nodePos.y - this.offSet.y, 0);\n        }\n        else if (xAsis < lx) {\n            this.newPosition = new Vec3(lx, nodePos.y - this.offSet.y, 0);\n        }\n        else if (yAxis < dy) {\n            this.newPosition = new Vec3(nodePos.x - this.offSet.x, dy, 0);\n        }\n        else if (yAxis > uy) {\n            this.newPosition = new Vec3(nodePos.x - this.offSet.x, uy, 0);\n        }\n        else {\n            // console.log(\"xAxis yAxis : \", xAsis, yAxis);\n            this.newPosition = new Vec3(nodePos.x - this.offSet.x, nodePos.y - this.offSet.y, 0);\n        }\n    }\n\n}\n\n\n"]}