{"version":3,"sources":["file:///D:/GAMIXLABS/Solitaire%20-%20Copy/assets/Script/EventEmitter.ts"],"names":["EventEmitter","constructor","events","hosts","on","event","listener","host","push","removeListener","idx","indexOf","splice","emit","args","i","listeners","length","slice","apply","once","arguments","Event"],"mappings":";;;iBAAaA,Y;;;;;;;;;;;;;8BAAAA,Y,GAAN,MAAMA,YAAN,CAAmB;AAItBC,QAAAA,WAAW,GAAG;AAAA,eAHdC,MAGc;AAAA,eAFdC,KAEc;AACV,eAAKD,MAAL,GAAc,EAAd;AACA,eAAKC,KAAL,GAAa,EAAb;AACH;;AAEDC,QAAAA,EAAE,CAACC,KAAD,EAAgBC,QAAhB,EAA+BC,IAA/B,EAA0C;AACxC,cAAI,OAAO,KAAKL,MAAL,CAAYG,KAAZ,CAAP,KAA8B,QAAlC,EAA4C;AACxC,iBAAKH,MAAL,CAAYG,KAAZ,IAAqB,EAArB;AACA,iBAAKF,KAAL,CAAWE,KAAX,IAAoB,EAApB;AACH;;AAED,eAAKH,MAAL,CAAYG,KAAZ,EAAmBG,IAAnB,CAAwBF,QAAxB;AACA,eAAKH,KAAL,CAAWE,KAAX,EAAkBG,IAAlB,CAAuBD,IAAvB;AACH;;AAEDE,QAAAA,cAAc,CAACJ,KAAD,EAAgBC,QAAhB,EAA+BC,IAA/B,EAA0C;AACpD,cAAIG,GAAJ,CADoD,CAEpD;AACA;;AACA,cAAI,OAAO,KAAKR,MAAL,CAAYG,KAAZ,CAAP,KAA8B,QAA9B,IAA0C,OAAO,KAAKF,KAAL,CAAWE,KAAX,CAAP,KAA6B,QAA3E,EAAqF;AACjFK,YAAAA,GAAG,GAAG,KAAKR,MAAL,CAAYG,KAAZ,EAAmBM,OAAnB,CAA2BL,QAA3B,CAAN,CADiF,CAEjF;AACA;AACA;;AAEA,gBAAII,GAAG,GAAG,CAAC,CAAX,EAAc;AACV,mBAAKR,MAAL,CAAYG,KAAZ,EAAmBO,MAAnB,CAA0BF,GAA1B,EAA+B,CAA/B;AACA,mBAAKP,KAAL,CAAWE,KAAX,EAAkBO,MAAlB,CAAyBF,GAAzB,EAA8B,CAA9B;AACH,aATgF,CAUjF;;AAEH;AACJ;;AAEDG,QAAAA,IAAI,CAACR,KAAD,EAAgB,GAAGS,IAAnB,EAAgC;AAChC,cAAIC,CAAJ,EAAOZ,KAAP,EAAca,SAAd,EAAyBC,MAAzB;;AAEA,cAAI,OAAO,KAAKf,MAAL,CAAYG,KAAZ,CAAP,KAA8B,QAAlC,EAA4C;AACxCW,YAAAA,SAAS,GAAG,KAAKd,MAAL,CAAYG,KAAZ,EAAmBa,KAAnB,EAAZ;AACAf,YAAAA,KAAK,GAAG,KAAKA,KAAL,CAAWE,KAAX,EAAkBa,KAAlB,EAAR;AACAD,YAAAA,MAAM,GAAGD,SAAS,CAACC,MAAnB;;AAEA,iBAAKF,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGE,MAAhB,EAAwBF,CAAC,EAAzB,EAA6B;AACzB,kBAAI,KAAKb,MAAL,CAAYc,SAAS,CAACD,CAAD,CAArB,MAA8B,IAAlC,EAAwC;AACpCC,gBAAAA,SAAS,CAACD,CAAD,CAAT,CAAaI,KAAb,CAAmBhB,KAAK,CAACY,CAAD,CAAxB,EAA6BD,IAA7B;AACH,eAFD,MAGK;AACDE,gBAAAA,SAAS,CAACD,CAAD,CAAT,CAAaI,KAAb,CAAmB,IAAnB,EAAyBL,IAAzB;AACH;AACJ;AACJ;AACJ;;AAEDM,QAAAA,IAAI,CAACf,KAAD,EAAgBC,QAAhB,EAA+BC,IAA/B,EAA0C;AAC1C,eAAKH,EAAL,CAAQC,KAAR,EAAe,MAAM;AACjB,iBAAKI,cAAL,CAAoBJ,KAApB,EAA2BC,QAA3B,EAAqCC,IAArC;AACAD,YAAAA,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBE,SAArB;AACH,WAHD,EAGGd,IAHH;AAIH;;AA9DqB,O;;uBAkEbe,K,GAAQ,IAAItB,YAAJ,E","sourcesContent":["export class EventEmitter {\r\n    events: any;\r\n    hosts: any;\r\n\r\n    constructor() {\r\n        this.events = {};\r\n        this.hosts = {};\r\n    }\r\n\r\n    on(event: string, listener: any, host: any) {\r\n        if (typeof this.events[event] !== 'object') {\r\n            this.events[event] = [];\r\n            this.hosts[event] = [];\r\n        }\r\n\r\n        this.events[event].push(listener);\r\n        this.hosts[event].push(host);\r\n    }\r\n\r\n    removeListener(event: string, listener: any, host: any) {\r\n        var idx;\r\n        // cc.log(this.events);\r\n        // cc.log(this.hosts);\r\n        if (typeof this.events[event] === 'object' && typeof this.hosts[event] === 'object') {\r\n            idx = this.events[event].indexOf(listener);\r\n            // id = Array.indexOf(this.hosts[event], host);\r\n            // cc.log(idx);\r\n            // cc.log(this.events[event].length);\r\n\r\n            if (idx > -1) {\r\n                this.events[event].splice(idx, 1);\r\n                this.hosts[event].splice(idx, 1);\r\n            }\r\n            // cc.log(this.events[event].length);\r\n\r\n        }\r\n    }\r\n\r\n    emit(event: string, ...args: any[]) {\r\n        var i, hosts, listeners, length;\r\n\r\n        if (typeof this.events[event] === 'object') {\r\n            listeners = this.events[event].slice();\r\n            hosts = this.hosts[event].slice();\r\n            length = listeners.length;\r\n\r\n            for (i = 0; i < length; i++) {\r\n                if (this.events[listeners[i]] !== null) {\r\n                    listeners[i].apply(hosts[i], args);\r\n                }\r\n                else {\r\n                    listeners[i].apply(this, args);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    once(event: string, listener: any, host: any) {\r\n        this.on(event, () => {\r\n            this.removeListener(event, listener, host);\r\n            listener.apply(this, arguments);\r\n        }, host);\r\n    }\r\n    \r\n}\r\n\r\nexport const Event = new EventEmitter();\r\n\r\n"]}