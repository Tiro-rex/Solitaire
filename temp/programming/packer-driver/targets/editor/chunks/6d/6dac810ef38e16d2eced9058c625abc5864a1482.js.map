{"version":3,"sources":["file:///D:/GAMIXLABS/Solitaire/assets/Script/Pile.ts"],"names":["_decorator","Component","Vec2","Collider2D","PhysicsSystem2D","Contact2DType","cardMove","ReaveldCard","ccclass","property","Pile","offSet","cardR","snapParent","snapcard","start","instance","enable","coll","node","getComponent","on","BEGIN_CONTACT","onBeginContact","onDisable","off","init","array","len","count","console","log","i","addChild","children","faceDown","active","self","other","snapCardToParent","card","removeChild","index","length","removeListener","SortAlgo","delay","milliseconds","Promise","resolve","setTimeout"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Prefab, instantiate, EventMouse, Touch, Vec2, Vec3, Button, Collider2D, PhysicsSystem2D, Contact2DType, game } from 'cc';\nimport { Card } from './Card';\nimport { cardMove, CARDS_ARRAY } from './GameConstant';\nimport { GameScreen } from './GameScreen';\nimport ReaveldCard from './ReaveldCard';\nconst { ccclass, property } = _decorator;\n\n\n@ccclass('Pile')\nexport class Pile extends Component {\n    // @property(Node)\n    // deckOfCard: Node;\n\n    offSet = new Vec2();\n\n    public cardR: ReaveldCard;\n    snapParent: Node;\n    snapcard: boolean = false;\n\n    start() {\n        PhysicsSystem2D.instance.enable = true;\n        let coll = this.node.getComponent(Collider2D);\n        coll.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\n        // this.cardR.getComponent(ReaveldCard)\n    }\n    onDisable() {\n        this.node.off(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\n    }\n    async init(array, len, count) {\n        console.log(array, len, count);\n        // if (len == 1) {\n        //     console.log(\"ifloop\")\n        //     this.node.addChild(array[count - 1]);\n        // }\n        // else {\n        for (let i = 0; i < len; i++) {\n            this.node.addChild(array[count + i]);\n\n        }\n        // }\n        this.node.children[len - 1].getComponent(ReaveldCard).faceDown.active = false;\n\n    }\n    onBeginContact(self: Collider2D, other: Collider2D) {\n        this.snapParent = this.node;\n        cardMove.on(\"snapCard\", this.snapCardToParent, this)\n        // console.log(\"Snaping Parent\", this.snapParent);\n\n        // if (self.tag == 1 && window.moveCard) {\n        //     this.snapcard = true;\n        //     console.log(\"stack-->\", self.tag);\n        // }\n        // if (self.tag == 2 && window.moveCard) {\n        //     this.snapcard = true;\n        //     console.log(\"stack-->\", self.tag);\n        //     cardMove.on(\"snapCard\", this.snapCardToParent, this)\n        // }\n        // if (self.tag == 3 && window.moveCard) {\n        //     console.log(\"stack-->\", self.tag);\n        //     this.snapcard = true;\n        //     cardMove.on(\"snapCard\", this.snapCardToParent, this)\n        // }\n        // if (self.tag == 4 && window.moveCard) {\n        //     this.snapcard = true;\n        //     console.log(\"stack-->\", self.tag);\n        //     cardMove.on(\"snapCard\", this.snapCardToParent, this)\n        // }\n        // if (self.tag == 5 && window.moveCard) {\n        //     console.log(\"stack-->\", self.tag);\n        //     this.snapcard = true;\n        //     cardMove.on(\"snapCard\", this.snapCardToParent, this)\n        // }\n        // if (self.tag == 6 && window.moveCard) {\n        //     console.log(\"stack-->\", self.tag);\n        //     this.snapcard = true;\n        //     cardMove.on(\"snapCard\", this.snapCardToParent, this)\n        // }\n        // if (self.tag == 7 && window.moveCard) {\n        //     console.log(\"stack-->\", self.tag);\n        //     this.snapcard = true;\n        //     cardMove.on(\"snapCard\", this.snapCardToParent, this)\n        // }\n    }\n\n\n    snapCardToParent(card) {\n\n        this.node.removeChild(card);\n        let index = this.node.children.length;\n        this.snapParent.addChild(card);\n        this.snapcard = true;\n        cardMove.removeListener(\"snapCard\", this.snapCardToParent, this)\n        this.node.children[index - 1].getComponent(ReaveldCard).faceDown.active = false;\n    }\n\n    //Algo\n    SortAlgo() {\n        ///  this.node.removeChild\n    }\n    delay(milliseconds: number, count): Promise<number> {\n        return new Promise<number>(resolve => {\n            setTimeout(() => {\n                resolve(count);\n            }, milliseconds);\n        });\n    }\n}"]}