{"version":3,"sources":["file:///D:/GAMIXLABS/Solitaire%20-%20Copy/assets/Script/GameScreen.ts"],"names":["_decorator","Component","Node","Prefab","instantiate","Button","math","DCard","PosSnap","CARDS_ARRAY","Pile","ReaveldCard","ccclass","property","window","moveCard","GameScreen","allCardsArrays","SuffeledArray","h","h2","lastindex","count","initiallyGeneratedCard","playingCard","deckSnap","remove","array","snapParent","onLaod","start","on","snapCard","Shuffel","generateAllCards","initilizeStack","OnClick","deck","node","active","interactable","deckCard","OnResetDeck","reaveldCard","removeAllChildren","cardArray","card","addChild","getComponent","faceDown","push","removeParentFrokmdeck","removeChild","console","log","removeListener","snapForDeck","Sp","cardPos","stackp1","stack1","getPosition","stackp2","stack2","stackp3","stack3","stackp4","stack4","stackp5","stack5","stackp6","stack6","stackp7","stack7","parent","len","children","length","selectedCardVlaue","Child","value","Math","floor","x","lentgh2","stacckCardavlue","flipOperation","lenth2","lenth","arr","i","cardPrefeb","init","data","currIndex","randomInadex","random","stack","defaultPlayArea","stackNumber","delay","milliseconds","Promise","resolve","setTimeout"],"mappings":"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","sourcesContent":["\nimport { _decorator, Component, Node, Prefab, instantiate, EventMouse, Touch, Vec2, Vec3, Button, math, Collider2D, ICollisionEvent, Collider, BoxCollider2D, Contact2DType, IPhysics2DContact, PhysicsSystem2D, sp, } from 'cc';\nimport { Card } from './Card';\nimport { Ranks, Colour, Suits, cardMove, DCard, snapLogic, PosSnap } from './GameConstant';\nimport { CARDS_ARRAY, CardType } from './GameConstant';\nimport { Pile } from './Pile';\nimport ReaveldCard from './ReaveldCard';\nconst { ccclass, property } = _decorator;\ndeclare global {\n    interface Window {\n        moveCard: boolean;\n    }\n}\nwindow.moveCard = false;\n\n@ccclass('GameScreen')\nexport class GameScreen extends Component {\n    @property(Prefab)\n    cardPrefeb: Prefab;\n\n    @property(Node)\n    reaveldCard: Node;\n\n    @property(Button)\n    deck: Button;\n\n    @property(Node)\n    resetdeckButton: Node;\n\n    @property(Node)\n    stack1: Node\n\n    @property(Node)\n    stack2: Node\n\n    @property(Node)\n    stack3: Node\n\n    @property(Node)\n    stack4: Node\n\n    @property(Node)\n    stack5: Node\n\n    @property(Node)\n    stack6: Node\n\n    @property(Node)\n    stack7: Node\n\n\n    public allCardsArrays: Node[] = [];\n    public SuffeledArray: any[] = [];\n    public h: any\n    public h2: any[] = [];\n    public lastindex: any;\n    count: number;\n    initiallyGeneratedCard = 0;\n    playingCard: void;\n    deckSnap: any;\n    remove: boolean = false;\n    array: any[] = [];\n    snapParent: any;\n\n\n    // instantiationOfStack=true;\n\n    onLaod() {\n    }\n    start() {\n        PosSnap.on(\"stackPos\", this.snapCard, this)\n        // PhysicsSystem2D.instance.enable = true;\n        // this.stackcoll();\n        this.SuffeledArray = CARDS_ARRAY;\n        this.Shuffel(this.SuffeledArray);\n        this.generateAllCards(this.SuffeledArray);\n        this.initilizeStack();\n        // snapLogic.on(\"ParentforSnap\", this.snapForDeck, this)\n\n    }\n\n    OnClick() {\n\n        if (this.initiallyGeneratedCard == 52) {\n            this.deck.node.active = false\n            this.deck.interactable = false;\n        }\n        else {\n            this.deckCard(this.allCardsArrays);\n            // DCard.on(\"fromDeck\", this.removeParentFrokmdeck, this);\n        }\n    }\n    OnResetDeck() {\n        this.reaveldCard.removeAllChildren();\n        this.initiallyGeneratedCard = this.count;\n        this.deck.node.active = true;\n        this.deck.interactable = true;\n\n    }\n\n    deckCard(cardArray) {\n        let card = cardArray[this.initiallyGeneratedCard++];\n        this.reaveldCard.addChild(card);\n        card.getComponent(ReaveldCard).faceDown.active = false;\n        this.h = this.h2.push(card);\n        // window.moveCard = true;\n    }\n    removeParentFrokmdeck(card) {\n        // snapLogic.on(\"ParentforSnap\", this.snapForDeck, this)\n        this.reaveldCard.removeChild(card);\n\n        console.log(\"RemoveDeck\");\n        this.initiallyGeneratedCard += 1;\n        this.count += 1;\n        DCard.removeListener(\"fromDeck\", this.removeParentFrokmdeck, this)\n\n    }\n\n    snapForDeck(Sp) {\n        console.log(\"gameScreenEvent\", Sp);\n        // let value = this.reaveldCard.children[1].getComponent(ReaveldCard).value\n        // console.log(\"deck value\", value\n        // Sp.Sp.addChild();\n        // lastCard.TOUCH_END();\n\n    }\n    snapCard(cardPos) {\n\n        // console.log(\"stackp1\", stackp1);\n        let stackp1 = this.stack1.getPosition();\n        let stackp2 = this.stack2.getPosition();\n        let stackp3 = this.stack3.getPosition();\n        let stackp4 = this.stack4.getPosition();\n        let stackp5 = this.stack5.getPosition();\n        let stackp6 = this.stack6.getPosition();\n        let stackp7 = this.stack7.getPosition();\n        this.snapParent = cardPos.parent;\n        let len = cardPos.parent.children.length\n        let selectedCardVlaue = cardPos.Child.getComponent(ReaveldCard).value\n\n\n\n        if (Math.floor(stackp1.x) == cardPos.cardPos.x) {\n            cardPos.parent.removeChild(cardPos.Child)\n            let len = cardPos.parent.children.length\n            let lentgh2 = this.stack1.children.length\n            if (lentgh2 == 0) {\n                if (selectedCardVlaue == 13) {\n                    this.stack1.addChild(cardPos.Child)\n                }\n                return;\n\n            }\n            let stacckCardavlue = this.stack1.children[lentgh2 - 1].getComponent(ReaveldCard).value;\n\n            console.log(\"selected Card Value\", selectedCardVlaue);\n            console.log(\"StackCardValue\", stacckCardavlue);\n            if (stacckCardavlue == selectedCardVlaue + 1) {\n                console.log(\"IF CONDITION FROM STACK 1\")\n                this.flipOperation();\n                // if (lentgh2 == 0) {\n                if (selectedCardVlaue == 13) {\n\n                    this.stack1.addChild(cardPos.Child)\n                    // }\n                    //  \n                }\n\n                // cardPos.parent.children[len - 1].getComponent(ReaveldCard).faceDown.active = false;\n                // return;\n                // len = -1;\n\n            }\n            else {\n                cardPos.parent.addChild(cardPos.Child);\n            }\n        }\n        if (Math.floor(stackp2.x) == cardPos.cardPos.x) {\n            // console.log(\"para\", cardPos);\n            cardPos.parent.removeChild(cardPos.Child)\n            let lenth2 = this.stack2.children.length\n            let len = cardPos.parent.children.length\n            if (lenth2 == 0) {\n                return;\n            }\n            let selectedCardVlaue = cardPos.Child.getComponent(ReaveldCard).value\n            let stacckCardavlue = this.stack2.children[lenth2 - 1].getComponent(ReaveldCard).value;\n            console.log(\"selected Card Value\", selectedCardVlaue);\n            console.log(\"StackCardValue\", stacckCardavlue);\n            if (stacckCardavlue == selectedCardVlaue + 1) {\n                // if (len = + 1 || len == null) {\n                console.log(\"IF CONDITION FROM STACK 2\")\n\n                this.flipOperation()\n                // return;\n                this.stack2.addChild(cardPos.Child)\n                // len = -1;\n                // }\n            }\n            else {\n                cardPos.parent.addChild(cardPos.Child);\n            }\n        }\n        if (Math.floor(stackp3.x) == cardPos.cardPos.x) {\n            cardPos.parent.removeChild(cardPos.Child)\n            let len = cardPos.parent.children.length\n            let lentgh2 = this.stack3.children.length\n            if (lentgh2 == 0) {\n                return;\n            }\n            let selectedCardVlaue = cardPos.Child.getComponent(ReaveldCard).value\n            let stacckCardavlue = this.stack3.children[lentgh2 - 1].getComponent(ReaveldCard).value;\n            console.log(\"selected Card Value\", selectedCardVlaue);\n            console.log(\"StackCardValue\", stacckCardavlue);\n            if (stacckCardavlue == selectedCardVlaue + 1) {\n                // if (len + 1 || len == null) {\n                console.log(\"IF CONDITION FROM STACK 3\")\n\n                this.flipOperation()\n\n                // return;\n                this.stack3.addChild(cardPos.Child)\n                // len = -1;\n                // }\n            }\n            else {\n                cardPos.parent.addChild(cardPos.Child);\n            }\n        }\n        if (Math.floor(stackp4.x) == cardPos.cardPos.x) {\n            cardPos.parent.removeChild(cardPos.Child)\n            let len = cardPos.parent.children.length\n            let lentgh2 = this.stack4.children.length\n            if (lentgh2 == 0) {\n                return;\n            }\n            let selectedCardVlaue = cardPos.Child.getComponent(ReaveldCard).value\n            let stacckCardavlue = this.stack4.children[lentgh2 - 1].getComponent(ReaveldCard).value;\n            console.log(\"selected Card Value\", selectedCardVlaue);\n            console.log(\"StackCardValue\", stacckCardavlue);\n            if (stacckCardavlue == selectedCardVlaue + 1) {\n                // if (len + 1 || len == null) {\n                console.log(\"IF CONDITION FROM STACK 4\")\n\n                this.flipOperation()\n\n                // return;\n                this.stack4.addChild(cardPos.Child)\n                // len = -1;\n                // }\n            }\n            else {\n                cardPos.parent.addChild(cardPos.Child);\n            }\n            // console.log(\"herehr\", cardPos.cardPos.x);\n        }\n        if (Math.floor(stackp5.x) == cardPos.cardPos.x) {\n            cardPos.parent.removeChild(cardPos.Child)\n            let len = cardPos.parent.children.length\n            let lentgh2 = this.stack5.children.length\n            if (lentgh2 == 0) {\n                return;\n            }\n            let selectedCardVlaue = cardPos.Child.getComponent(ReaveldCard).value\n            let stacckCardavlue = this.stack5.children[lentgh2 - 1].getComponent(ReaveldCard).value;\n            console.log(\"selected Card Value\", selectedCardVlaue);\n            console.log(\"StackCardValue\", stacckCardavlue);\n            if (stacckCardavlue == selectedCardVlaue + 1) {\n                // if (len + 1 || len == null) {\n                console.log(\"IF CONDITION FROM STACK 5\")\n                this.flipOperation()\n\n                // return;\n                this.stack5.addChild(cardPos.Child)\n                // len = -1;\n                // }\n            }\n            else {\n                cardPos.parent.addChild(cardPos.Child);\n            }\n        }\n        if (Math.floor(stackp6.x) == cardPos.cardPos.x) {\n            cardPos.parent.removeChild(cardPos.Child)\n            let len = cardPos.parent.children.length\n            let lentgh2 = this.stack6.children.length\n            if (lentgh2 == 0) {\n                return;\n            }\n            let selectedCardVlaue = cardPos.Child.getComponent(ReaveldCard).value\n            let stacckCardavlue = this.stack6.children[lentgh2 - 1].getComponent(ReaveldCard).value;\n            console.log(\"selected Card Value\", selectedCardVlaue);\n            console.log(\"StackCardValue\", stacckCardavlue);\n            if (stacckCardavlue == selectedCardVlaue + 1) {\n                // if (len + 1 || len == null) {\n                console.log(\"IF CONDITION FROM STACK 6\")\n                this.flipOperation()\n\n\n                this.stack6.addChild(cardPos.Child)\n                // }\n            }\n            else {\n                cardPos.parent.addChild(cardPos.Child);\n            }\n        }\n        if (Math.floor(stackp7.x) == cardPos.cardPos.x) {\n            cardPos.parent.removeChild(cardPos.Child)\n            let len = cardPos.parent.children.length\n            let lentgh2 = this.stack7.children.length\n            if (lentgh2 == 0) {\n                return;\n            }\n            let selectedCardVlaue = cardPos.Child.getComponent(ReaveldCard).value\n            let stacckCardavlue = this.stack7.children[lentgh2 - 1].getComponent(ReaveldCard).value;\n            if (stacckCardavlue == selectedCardVlaue + 1) {\n                // if (len + 1 || len == null) {\n                this.flipOperation()\n                // if (len + 1) {\n                //     if (len == null) {\n                //         return;\n                //     }\n                //     else {\n                //         this.flipOperation()\n                //     }                    // return;\n                console.log(\"IF CONDITION FROM STACK 7\")\n                this.stack7.addChild(cardPos.Child)\n                // len = +1;                // }\n                // }\n            }\n            else {\n                cardPos.parent.addChild(cardPos.Child);\n            }\n            console.log(\"selected Card Value\", selectedCardVlaue);\n            console.log(\"StackCardValue\", stacckCardavlue);\n            // else if (len - 1) {\n            //     cardPos.parent.addChild(cardPos.ChildS);\n\n            // }\n\n        }\n    }\n\n    flipOperation() {\n        let lenth = this.snapParent.children.length\n        if (lenth == 0) {\n            return;\n        } else {\n\n            this.snapParent.children[lenth - 1].getComponent(ReaveldCard).faceDown.active = false;\n        }\n        // console.log(\"herhehr=>>>>\", lenth);\n\n    }\n\n\n    generateAllCards(cardArray) {\n        let arr = [...cardArray]\n        for (let i = 0; i < arr.length; i++) {\n            let card = instantiate(this.cardPrefeb);\n            card.getComponent(ReaveldCard).init(arr[i]);\n            this.allCardsArrays.push(card);\n        }\n\n    }\n    Shuffel(data) {\n        let currIndex = data.length, randomInadex;\n        while (currIndex != 0) {\n            randomInadex = Math.floor(math.random() * currIndex);\n            currIndex--;\n            [data[currIndex], data[randomInadex]] = [data[randomInadex], data[currIndex]];\n        }\n        return data;\n    }\n    initilizeStack() {\n        this.count = 0;\n        for (let i = 0; i < 7; i++) {\n            this.count += i;\n            let stack = this.defaultPlayArea(i + 1).getComponent(Pile)\n            stack.init(this.allCardsArrays, i + 1, this.count)\n        }\n        this.count += 7;\n        this.initiallyGeneratedCard = this.count;\n    }\n    defaultPlayArea(stackNumber) {\n        switch (stackNumber) {\n            case 1:\n                return this.stack1;\n            case 2:\n                return this.stack2;\n            case 3:\n                return this.stack3;\n            case 4:\n                return this.stack4;\n            case 5:\n                return this.stack5;\n            case 6:\n                return this.stack6;\n            case 7:\n                return this.stack7;\n        }\n    }\n    delay(milliseconds: number, count): Promise<number> {\n        return new Promise<number>(resolve => {\n            setTimeout(() => {\n                resolve(count);\n            }, milliseconds);\n        });\n    }\n\n    // onDisable() {\n    //     for (let i = 0; i <= 7; i++) {\n    //         let pile = this.defaultPlayArea(i)\n    //         let coll = pile.getComponent(Collider2D);\n    //         coll.off(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\n    //     }\n    // }\n\n}\n"]}