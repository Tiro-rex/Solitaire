{"version":3,"sources":["file:///D:/GAMIXLABS/Solitaire/assets/Script/ReaveldCard.ts"],"names":["_decorator","Component","Node","Label","Vec2","Vec3","Color","GameManager","ccclass","property","ReaveldCard","cardColor","cardace","cardNumber","isMoving","distance","touchStart","offSet","newPosition","lastPosition","zoomPercentage","lastZoomPercentage","init","data","cardFace","string","suit","cardRank","rank","color","node","on","EventType","TOUCH_START","onTouchStart","bind","TOUCH_MOVE","onMoveStart","TOUCH_END","onTouchEnd","e","_allTouches","length","_point","getUILocation","subtract","getParent","getPosition","console","log","nodePos","setPosition","x","y","worldPosition"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, TERRAIN_HEIGHT_BASE, color, Label, Vec2, Vec3, Touch, Color } from 'cc';\nimport { Colour, Ranks, Suits } from './GameConstant';\nimport { CARDS_ARRAY } from './GameConstant';\nimport { GameManager } from './GameManager';\nconst { ccclass, property } = _decorator;\n\n\n@ccclass('ReaveldCard')\nexport default class ReaveldCard extends Component {\n    @property(Label)\n    cardRank: Label;\n    @property(Label)\n    cardFace: Label;\n    @property(GameManager)\n    game: GameManager;\n\n\n\n\n    cardColor: string;\n    cardace: string;\n    cardNumber: string;\n    isMoving: boolean;\n    distance: number;\n    touchStart = new Vec2();\n    offSet = new Vec2();\n    newPosition = new Vec3();\n    lastPosition = new Vec2()\n    zoomPercentage = 100;\n    lastZoomPercentage = 100;\n\n\n\n\n    init(data) {\n        // CARDS_ARRAY.values()\n        // console.log(data)\n        this.cardFace.string = data.suit;\n        this.cardRank.string = data.rank;\n        this.cardNumber = data.rank;\n        this.cardace = data.suit;\n        if (this.cardFace.string == 'h' || this.cardFace.string == 'd') {\n            this.cardRank.color = new Color(255, 0, 0);\n            this.cardFace.color = new Color(255, 0, 0);\n        }\n        else if (this.cardFace.string == 's' || this.cardFace.string == 'c') {\n            this.cardRank.color = new Color(0, 0, 0, 255);\n            this.cardFace.color = new Color(0, 0, 0, 255);\n        }\n\n        this.node.on(Node.EventType.TOUCH_START, this.onTouchStart.bind(this));\n        this.node.on(Node.EventType.TOUCH_MOVE, this.onMoveStart.bind(this));\n        this.node.on(Node.EventType.TOUCH_END, this.onTouchEnd.bind(this));\n        // this.game.mainArea();\n\n    }\n    onTouchStart(e: Touch) {\n        if (e._allTouches.length == 2) {\n            this.distance = 0;\n            this.distance = Vec2.distance(e._allTouches[0]._point, e._allTouches[1]._point);\n        }\n\n        this.touchStart = e.getUILocation();\n        Vec2.subtract(this.offSet, this.node.getParent().getPosition() as unknown as Vec2, this.touchStart);\n        console.log(\"heyys\", this.cardace, this.cardNumber);\n\n\n\n    }\n    onMoveStart(e: Touch) {\n        // if (e._allTouches.length == 1) {\n\n        // this.move(e);\n        // }\n        this.lastPosition = e.getUILocation();\n        Vec2.subtract(this.offSet, this.touchStart, this.lastPosition);\n        let nodePos = this.node.getPosition() as unknown as Vec2;\n        this.node.setPosition(nodePos.x - this.offSet.x, nodePos.y - this.offSet.y, 0.5);\n        this.touchStart = this.lastPosition;\n        console.log(\"heyys3 \", this.node.getPosition());\n        console.log(\"lastPos\", this.lastPosition)\n        // this.node.worldPosition = this.newPosition;\n        // this.newPosition = new Vec3(nodePos.x - this.offSet.x, nodePos.y - this.offSet.y, 0.);\n\n    }\n    onTouchEnd(e: Touch) {\n\n        // console.log(\"heyys\", e);\n        this.node.worldPosition = this.lastPosition;\n        console.log(\"Position\", this.node.worldPosition);\n    }\n\n\n}\n\n\n"]}