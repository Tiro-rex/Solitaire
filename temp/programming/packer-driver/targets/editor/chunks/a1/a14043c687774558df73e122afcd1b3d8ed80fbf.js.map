{"version":3,"sources":["file:///D:/GAMIXLABS/Solitaire/assets/Script/ReaveldCard.ts"],"names":["_decorator","Component","Node","Label","Vec2","Vec3","Color","ccclass","property","ReaveldCard","cardColor","cardace","cardNumber","isMoving","distance","touchStart","offSet","newPosition","lastPosition","zoomPercentage","lastZoomPercentage","game","init","data","get","Shuffel","suit","console","log","cardFace","string","cardRank","rank","cardRank2","color","node","on","EventType","TOUCH_START","onTouchStart","bind","TOUCH_MOVE","onMoveStart","TOUCH_END","onTouchEnd","e","_allTouches","length","_point","getUILocation","subtract","getParent","getPosition","nodePos","setPosition","x","y","worldPosition"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, TERRAIN_HEIGHT_BASE, color, Label, Vec2, Vec3, Touch, Color, math } from 'cc';\r\nimport { Card } from './Card';\r\nimport { Colour, Ranks, Suits } from './GameConstant';\r\nimport { CARDS_ARRAY } from './GameConstant';\r\nimport { GameManager } from './GameManager';\r\nimport { GameScreen } from './GameScreen';\r\nconst { ccclass, property } = _decorator;\r\n\r\n\r\n@ccclass('ReaveldCard')\r\nexport default class ReaveldCard extends Component {\r\n    @property(Label)\r\n    cardRank: Label;\r\n    @property(Label)\r\n    cardRank2: Label;\r\n    @property(Label)\r\n    cardFace: Label;\r\n    // @property(GameScreen)\r\n    // game: GameScreen;\r\n\r\n\r\n\r\n\r\n    cardColor: string;\r\n    cardace: string;\r\n    cardNumber: string;\r\n    isMoving: boolean;\r\n    distance: number;\r\n    touchStart = new Vec2();\r\n    offSet = new Vec2();\r\n    newPosition = new Vec3();\r\n    lastPosition = new Vec2()\r\n    zoomPercentage = 100;\r\n    lastZoomPercentage = 100;\r\n    game: GameScreen;\r\n\r\n\r\n\r\n\r\n    init(data) {\r\n        let get = this.game.Shuffel(data.suit)\r\n        console.log(get);\r\n\r\n        this.cardFace.string = data.suit;\r\n        this.cardRank.string = data.rank;\r\n        this.cardRank2.string = data.rank;\r\n        this.cardNumber = data.rank;\r\n        this.cardace = data.suit;\r\n        if (this.cardFace.string == '♥' || this.cardFace.string == '♦') {\r\n            this.cardRank.color = new Color(255, 0, 0);\r\n            this.cardRank2.color = new Color(255, 0, 0);\r\n            this.cardFace.color = new Color(255, 0, 0);\r\n        }\r\n        else if (this.cardFace.string == '♠' || this.cardFace.string == '♣') {\r\n            this.cardRank.color = new Color(0, 0, 0, 255);\r\n            this.cardRank2.color = new Color(0, 0, 0, 255);\r\n            this.cardFace.color = new Color(0, 0, 0, 255);\r\n        }\r\n\r\n        this.node.on(Node.EventType.TOUCH_START, this.onTouchStart.bind(this));\r\n        this.node.on(Node.EventType.TOUCH_MOVE, this.onMoveStart.bind(this));\r\n        this.node.on(Node.EventType.TOUCH_END, this.onTouchEnd.bind(this));\r\n        // this.game.mainArea();\r\n\r\n    }\r\n    onTouchStart(e: Touch) {\r\n        if (e._allTouches.length == 2) {\r\n            this.distance = 0;\r\n            this.distance = Vec2.distance(e._allTouches[0]._point, e._allTouches[1]._point);\r\n        }\r\n\r\n        this.touchStart = e.getUILocation();\r\n        Vec2.subtract(this.offSet, this.node.getParent().getPosition() as unknown as Vec2, this.touchStart);\r\n        console.log(\"heyys\", this.cardace, this.cardNumber);\r\n\r\n\r\n\r\n    }\r\n    onMoveStart(e: Touch) {\r\n        // if (e._allTouches.length == 1) {\r\n\r\n        // this.move(e);\r\n        // }\r\n        this.lastPosition = e.getUILocation();\r\n        Vec2.subtract(this.offSet, this.touchStart, this.lastPosition);\r\n        let nodePos = this.node.getPosition() as unknown as Vec2;\r\n        this.node.setPosition(nodePos.x - this.offSet.x, nodePos.y - this.offSet.y, 0.5);\r\n        this.touchStart = this.lastPosition;\r\n        console.log(\"heyys3 \", this.node.getPosition());\r\n        console.log(\"lastPos\", this.lastPosition)\r\n        // this.node.worldPosition = this.newPosition;\r\n        // this.newPosition = new Vec3(nodePos.x - this.offSet.x, nodePos.y - this.offSet.y, 0.);\r\n        //this.getComponent(Card).mainArea();\r\n    }\r\n    onTouchEnd(e: Touch) {\r\n        console.log(\"Position\", this.node.worldPosition);\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n"]}