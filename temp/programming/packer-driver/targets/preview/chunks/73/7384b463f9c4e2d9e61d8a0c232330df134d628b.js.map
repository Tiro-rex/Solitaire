{"version":3,"sources":["file:///D:/GAMIXLABS/Solitaire%20-%20Copy/assets/Script/Pile.ts"],"names":["_decorator","Component","cardMove","ReaveldCard","ccclass","property","Pile","offCard","cardR","snapParent","start","onDisable","init","array","len","count","i","delay","node","addChild","children","getComponent","faceDown","active","snapCardToParent","card","indexforstack","length","removeChild","index","value","cardInStack","console","log","toString","removeListener","milliseconds","Promise","resolve","setTimeout"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Prefab, instantiate, EventMouse, Touch, Vec2, Vec3, Button, Collider2D, PhysicsSystem2D, Contact2DType, game } from 'cc';\nimport { Card } from './Card';\nimport { cardMove, CARDS_ARRAY, Ranks, snapLogic } from './GameConstant';\nimport { GameScreen } from './GameScreen';\nimport ReaveldCard from './ReaveldCard';\nconst { ccclass, property } = _decorator;\n\n\n@ccclass('Pile')\nexport class Pile extends Component {\n    // @property(Node)\n    // deckOfCard: Node;\n\n    offCard: any[];\n\n    public cardR: any;\n    snapParent: any;\n    // snapcard: boolean = false;\n\n    start() {\n        // PhysicsSystem2D.instance.enable = true;\n        // let coll = this.node.getComponent(Collider2D);\n        // coll.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\n        // this.cardR.getComponent(ReaveldCard)\n    }\n    onDisable() {\n        // this.node.off(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\n    }\n    async init(array, len, count) {\n        // console.log(array, len, count);\n        // if (len == 1) {\n        //     console.log(\"ifloop\")\n        //     this.node.addChild(array[count - 1]);\n        // }\n        // else {\n        for (let i = 0; i < len; i++) {\n            await this.delay(200, this.node.addChild(array[count + i]));\n\n        }\n        // }\n        this.node.children[len - 1].getComponent(ReaveldCard).faceDown.active = false;\n\n    }\n    // onBeginContact(self: Collider2D, other: Collider2D) {\n    //     this.snapParent = self.node;\n    //     this.cardR = other.node;\n    //     snapLogic.emit(\"ParentforSnap\", { Sp: this.snapParent, c: this.cardR })\n    //     // console.log(\"hhihihi\", self);\n    //     // console.log({ sp: this.snapParent, c: this.cardR });\n\n\n\n    //     // console.log(\"Snaping Parent\", this.snapParent);\n\n    //     if (self.tag == 1 && window.moveCard) {\n    //         cardMove.on(\"snapCard\", this.snapCardToParent, this)\n    //         console.log(\"stack-->\", self.tag);\n    //     }\n    //     if (self.tag == 2 && window.moveCard) {\n    //         cardMove.on(\"snapCard\", this.snapCardToParent, this)\n    //         console.log(\"stack-->\", self.tag);\n    //     }\n    //     if (self.tag == 3 && window.moveCard) {\n    //         cardMove.on(\"snapCard\", this.snapCardToParent, this)\n    //         console.log(\"stack-->\", self.tag);\n    //     }\n    //     if (self.tag == 4 && window.moveCard) {\n    //         cardMove.on(\"snapCard\", this.snapCardToParent, this)\n    //         console.log(\"stack-->\", self.tag);\n    //     }\n    //     if (self.tag == 5 && window.moveCard) {\n    //         cardMove.on(\"snapCard\", this.snapCardToParent, this)\n    //         console.log(\"stack-->\", self.tag);\n    //     }\n    //     if (self.tag == 6 && window.moveCard) {\n    //         cardMove.on(\"snapCard\", this.snapCardToParent, this)\n    //         console.log(\"stack-->\", self.tag);\n    //     }\n    //     if (self.tag == 7 && window.moveCard) {\n    //         cardMove.on(\"snapCard\", this.snapCardToParent, this)\n    //         console.log(\"stack-->\", self.tag);\n    //     }\n    // }\n    // checkBeforesnap() {\n\n    //     console.log(\"card\", value)\n    // }\n    // checkindex()\n    // {\n    //     let index = this.node.children.length;\n    //     if(index==0){\n    //         this.snapParent.addChildc\n    //     }\n    // }\n    snapCardToParent(card) {\n\n        let indexforstack = this.snapParent.children.length\n        this.node.removeChild(card);\n        let index = this.node.children.length;\n        if (index == 0) {\n            this.node.addChild(card);\n        }\n        this.node.children[index - 1].getComponent(ReaveldCard).faceDown.active = false;\n        let value = this.cardR.getComponent(ReaveldCard).value\n        if (indexforstack <= 0) {\n            return;\n        }\n        let cardInStack = this.snapParent.children[index - 1].getComponent(ReaveldCard).value\n        console.log(\"card  \", value.toString())\n        console.log(\"cardStack  \", cardInStack.toString())\n        if (value + 1 == cardInStack) {\n            this.snapParent.addChild(card);\n\n        } else {\n            console.log(\"elsePart\");\n\n        }\n        // this.snapParent.children[indexforstack - 1].getComponent(ReaveldCard).faceDown.active = false;\n        cardMove.removeListener(\"snapCard\", this.snapCardToParent, this)\n    }\n\n\n    delay(milliseconds: number, count): Promise<number> {\n        return new Promise<number>(resolve => {\n            setTimeout(() => {\n                resolve(count);\n            }, milliseconds);\n        });\n    }\n}"]}