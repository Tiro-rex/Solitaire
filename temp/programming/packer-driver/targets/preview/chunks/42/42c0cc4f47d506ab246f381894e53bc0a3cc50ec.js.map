{"version":3,"sources":["file:///D:/GAMIXLABS/Solitaire/assets/Script/Pile.ts"],"names":["_decorator","Component","Node","Prefab","instantiate","Button","math","Card","CARDS_ARRAY","GameManager","PileMaxFanOperation","ccclass","property","Pile","arrayOfCard","arrayOfCard2","h","ramdom","random","cardsChanged","maxFanChanged","cards_","maxFan_","length","maxFan","Math","max","oldMaxFan","op","redo","start","OnClick","creatCard","deck","interactable","dotSetMaxFan","card","cardPrefeb","getComponent","push","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;AAA4CC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,I,OAAAA,I;;AACzFC,MAAAA,I,iBAAAA,I;;AACAC,MAAAA,W,iBAAAA,W;;AACAC,MAAAA,W,iBAAAA,W;;AAEAC,MAAAA,mB,iBAAAA,mB;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBZ,U;;sBAGjBa,I,WADZF,OAAO,CAAC,MAAD,C,UAEHC,QAAQ,CAACT,MAAD,C,UAERS,QAAQ,CAACV,IAAD,C,UAERU,QAAQ,CAACP,MAAD,C,UAERO,QAAQ;AAAA;AAAA,qC,2BARb,MACaC,IADb,SAC0BZ,SAD1B,CACoC;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAUhCa,WAVgC,GAUX,EAVW;AAAA,eAWhCC,YAXgC,GAWV,EAXU;AAAA,eAYhCC,CAZgC;AAAA,eAahCC,MAbgC,GAavBX,IAAI,CAACY,MAAL,EAbuB;;AAAA,eAezBC,YAfyB,GAeV,MAAM,CAAG,CAfC;;AAAA,eAgBzBC,aAhByB,GAgBT,MAAM,CAAG,CAhBA;;AAAA,eAiBzBC,MAjByB,GAiBR,EAjBQ;AAAA,eAqBxBC,OArBwB,GAqBN,GArBM;AAAA;;AAkBf,YAANC,MAAM,GAAG;AAChB,iBAAO,KAAKF,MAAL,CAAYE,MAAnB;AACH;;AAEgB,YAANC,MAAM,GAAG;AAAE,iBAAO,KAAKF,OAAZ;AAAsB;;AAC3B,YAANE,MAAM,CAACA,MAAD,EAAiB;AAC9BA,UAAAA,MAAM,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYF,MAAZ,CAAT;AACA,cAAI,KAAKF,OAAL,KAAiBE,MAArB,EACI;AACJ,cAAMG,SAAS,GAAG,KAAKL,OAAvB;AACA,cAAMM,EAAE,GAAG;AAAA;AAAA,0DAAwB,IAAxB,EAA8BD,SAA9B,EAAyCH,MAAzC,CAAX,CAL8B,CAM9B;;AACAI,UAAAA,EAAE,CAACC,IAAH;AACH;;AAEDC,QAAAA,KAAK,GAAG;AAEJ,eAAKf,YAAL;AAAA;AAAA;AAEH;;AAEDgB,QAAAA,OAAO,GAAG;AACN,eAAKC,SAAL;;AAEA,cAAI,KAAKhB,CAAL,IAAU,EAAd,EAAkB;AACd,iBAAKiB,IAAL,CAAUC,YAAV,GAAyB,KAAzB;AAEH,WANK,CAON;;AACH;;AACDC,QAAAA,YAAY,CAACX,MAAD,EAAiB;AACzB,eAAKF,OAAL,GAAeE,MAAf;AACA,eAAKJ,aAAL;AACH;;AAEDY,QAAAA,SAAS,GAAG;AACR;AACA;AACA,cAAII,IAAI,GAAGhC,WAAW,CAAC,KAAKiC,UAAN,CAAtB;AACAD,UAAAA,IAAI,CAACE,YAAL;AAAA;AAAA,4BAJQ,CAKR;AACA;AACA;;AACA,eAAKjB,MAAL,CAAYkB,IAAZ,CAAiBH,IAAjB;AACA,eAAKjB,YAAL;AACA,iBAAOiB,IAAP;AACAI,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,KAAKzB,CAA1B;AACH;;AAjE+B,O","sourcesContent":["import { _decorator, Component, Node, Prefab, instantiate, EventMouse, Touch, Vec2, Vec3, Button, math } from 'cc';\nimport { Card } from './Card';\nimport { CARDS_ARRAY } from './GameConstant';\nimport { GameManager } from './GameManager';\nimport ReaveldCard from './ReaveldCard';\nimport { PileMaxFanOperation } from './PileMaxFanOperation';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Pile')\nexport class Pile extends Component {\n    @property(Prefab)\n    cardPrefeb: Prefab;\n    @property(Node)\n    reaveldCard: Node;\n    @property(Button)\n    deck: (Button);\n    @property(GameManager)\n    game: GameManager;\n\n    arrayOfCard: any[] = [];\n    arrayOfCard2: any[] = [];\n    h: any\n    ramdom = math.random();\n\n    public cardsChanged = () => { };\n    public maxFanChanged = () => { };\n    public cards_: Card[] = [];\n    public get length() {\n        return this.cards_.length\n    }\n    private maxFan_: number = 999;\n    public get maxFan() { return this.maxFan_; }\n    public set maxFan(maxFan: number) {\n        maxFan = Math.max(0, maxFan);\n        if (this.maxFan_ === maxFan)\n            return;\n        const oldMaxFan = this.maxFan_;\n        const op = new PileMaxFanOperation(this, oldMaxFan, maxFan);\n        //this.game.addundoableOP(op);\n        op.redo();\n    }\n\n    start() {\n\n        this.arrayOfCard2 = CARDS_ARRAY;\n\n    }\n\n    OnClick() {\n        this.creatCard();\n\n        if (this.h == 52) {\n            this.deck.interactable = false;\n\n        }\n        // this.getComponent(Card).init();\n    }\n    dotSetMaxFan(maxFan: number) {\n        this.maxFan_ = maxFan;\n        this.maxFanChanged();\n    }\n\n    creatCard() {\n        //console.log(\"dhoom dhoom\");\n        // for (let i = 0; i < 1; i++) {\n        let card = instantiate(this.cardPrefeb);\n        card.getComponent(Card);\n        //  this.reaveldCard.addChild(card);\n        // card.getComponent(ReaveldCard).init(this.arrayOfCard2[0]);\n        //this.arrayOfCard2.splice(0, 1);\n        this.cards_.push(card);\n        this.cardsChanged();\n        return card;\n        console.log(\"Array\", this.h);\n    }\n}"]}