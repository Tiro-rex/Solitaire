{"version":3,"sources":["file:///D:/GAMIXLABS/Solitaire/assets/Script/Pile.ts"],"names":["_decorator","Component","Prefab","Collider2D","PhysicsSystem2D","Contact2DType","ActionTypes","ReaveldCard","ccclass","property","Pile","stackNumber","arrayOfCard","h2","init","data","instance","enable","coll","node","getComponent","on","BEGIN_CONTACT","onBeginContact","stacklogic","self","other","tag","MOVE_CARD","console","log","i","card1","splice","addChild","lastCard","children","length","faceDown","active","faceUp"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Prefab, instantiate, EventMouse, Touch, Vec2, Vec3, Button, Collider2D, PhysicsSystem2D, Contact2DType } from 'cc';\nimport { Card } from './Card';\nimport { ActionTypes, CARDS_ARRAY } from './GameConstant';\nimport { GameManager } from './GameManager';\nimport ReaveldCard from './ReaveldCard';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Pile')\nexport class Pile extends Component {\n    @property(Prefab)\n    cardPrefeb: Prefab;\n    stackNumber: number\n\n    arrayOfCard: Node[] = [];\n    h2: number;\n\n    init(data, arrayOfCard) {\n        this.stackNumber = data;\n        this.arrayOfCard = arrayOfCard\n        PhysicsSystem2D.instance.enable = true;\n        let coll = this.node.getComponent(Collider2D);\n        coll.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\n        this.stacklogic(data);\n    }\n    onBeginContact(self: Collider2D, other: Collider2D) {\n\n        if (self.tag == 1 || ActionTypes.MOVE_CARD) {\n            console.log(\"stack1\");\n        }\n        if (self.tag == 2) {\n            console.log(\"stack2\");\n        }\n        if (self.tag == 3) {\n            console.log(\"stack3\");\n        }\n        if (self.tag == 4) {\n            console.log(\"stack4\");\n        }\n        if (self.tag == 5) {\n            console.log(\"stack5\");\n        }\n        if (self.tag == 6) {\n            console.log(\"stack6\");\n        }\n        if (self.tag == 7) {\n            console.log(\"stack7\");\n        }\n\n        // let selfcollider = event.selfCollider;\n        // let otherCollider = event.otherCollider;\n        // console.log(\"self\", selfcollider);\n        // console.log(\"other\", otherCollider);\n    }\n    stacklogic(data) {\n\n        for (let i = 0; i < 7; i++) {\n            // let card1 = instantiate(this.cardPrefeb);\n            // card1.getComponent(ReaveldCard).init(this.arrayOfCard[0]);\n            let card1 = this.arrayOfCard.splice(0, 1);\n            this.node.addChild(card1[0])\n            // await this.delay(200, this.node.addChild(card1[0]));\n            // this.h2 = this.arrayOfCard.push(card1);\n            // }\n            let lastCard: ReaveldCard = this.node.children[this.node.children.length - 1].getComponent(ReaveldCard)\n            lastCard.faceDown.active = false;\n            lastCard.faceUp.active = true;\n            // console.log(\"last\", this.lastindex);\n            //console.log(\"array\", this.h2);\n        }\n    }\n    // delay(milliseconds: number, count): Promise<number> {\n    //     return new Promise<number>(resolve => {\n    //         setTimeout(() => {\n    //             resolve(count);\n    //         }, milliseconds);\n    //     });\n    // }\n}"]}