{"version":3,"sources":["file:///D:/GAMIXLABS/Solitaire/assets/Script/ReaveldCard.ts"],"names":["_decorator","Component","Node","Label","Vec2","Vec3","Color","ccclass","property","ReaveldCard","cardColor","cardace","cardNumber","isMoving","distance","touchStart","offSet","newPosition","lastPosition","zoomPercentage","lastZoomPercentage","gameS","onLaod","node","on","EventType","MOUSE_DOWN","mouseBtnDown","MOUSE_UP","mouseBtnUp","init","data","cardFace","string","suit","cardRank","rank","cardRank2","color","TOUCH_START","onTouchStart","bind","TOUCH_MOVE","onMoveStart","TOUCH_END","onTouchEnd","event","e","_allTouches","length","_point","getUILocation","subtract","getParent","getPosition","console","log","name","nodePos","setPosition","x","y","window","moveCard","setSiblingIndex"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, TERRAIN_HEIGHT_BASE, color, Label, Vec2, Vec3, Touch, Color, math, systemEvent } from 'cc';\r\nimport { Card } from './Card';\r\nimport { Colour, Ranks, Suits } from './GameConstant';\r\nimport { CARDS_ARRAY } from './GameConstant';\r\nimport { GameManager } from './GameManager';\r\nimport { GameScreen } from './GameScreen';\r\nconst { ccclass, property } = _decorator;\r\n\r\n\r\n@ccclass('ReaveldCard')\r\nexport default class ReaveldCard extends Component {\r\n    @property(Label)\r\n    cardRank: Label;\r\n    @property(Label)\r\n    cardRank2: Label;\r\n    @property(Label)\r\n    cardFace: Label;\r\n    @property(Node)\r\n    faceUp: Node;\r\n    @property(Node)\r\n    faceDown: Node;\r\n    // @property(GameScreen)\r\n    // game: GameScreen;\r\n\r\n\r\n\r\n\r\n    cardColor: string;\r\n    cardace: string;\r\n    cardNumber: string;\r\n    isMoving: boolean;\r\n    distance: number;\r\n    touchStart = new Vec2();\r\n    offSet = new Vec2();\r\n    newPosition = new Vec3();\r\n    lastPosition = new Vec2()\r\n    zoomPercentage = 100;\r\n    lastZoomPercentage = 100;\r\n    gameS: GameScreen;\r\n\r\n\r\n\r\n\r\n    onLaod() {\r\n        this.node.on(Node.EventType.MOUSE_DOWN, this.mouseBtnDown, this);\r\n        this.node.on(Node.EventType.MOUSE_UP, this.mouseBtnUp, this);\r\n\r\n    }\r\n    init(data) {\r\n        // let get = this.game.Shuffel(data)\r\n        // console.log(get);\r\n\r\n        this.cardFace.string = data.suit;\r\n        this.cardRank.string = data.rank;\r\n        this.cardRank2.string = data.rank;\r\n        this.cardNumber = data.rank;\r\n        if (this.cardFace.string == '♥' || this.cardFace.string == '♦') {\r\n            this.cardace = data.suit;\r\n            this.cardRank.color = new Color(255, 0, 0);\r\n\r\n            this.cardRank2.color = new Color(255, 0, 0);\r\n            this.cardFace.color = new Color(255, 0, 0);\r\n        }\r\n        else if (this.cardFace.string == '♠' || this.cardFace.string == '♣') {\r\n            this.cardRank.color = new Color(0, 0, 0, 255);\r\n            this.cardRank2.color = new Color(0, 0, 0, 255);\r\n            this.cardFace.color = new Color(0, 0, 0, 255);\r\n        }\r\n        // this.node.on(Node.EventType.MOUSE_DOWN, this.onTouchStart.bind(this));\r\n        this.node.on(Node.EventType.TOUCH_START, this.onTouchStart.bind(this));\r\n        this.node.on(Node.EventType.TOUCH_MOVE, this.onMoveStart.bind(this));\r\n        this.node.on(Node.EventType.TOUCH_END, this.onTouchEnd.bind(this));\r\n        // this.game.mainArea();\r\n\r\n    }\r\n    mouseBtnUp(event) {\r\n        switch (event.MOUSE_DOWN) {\r\n        }\r\n    }\r\n    mouseBtnDown(event) {\r\n        switch (event.MOUSE_UP) {\r\n\r\n        }\r\n    }\r\n    onTouchStart(e: Touch) {\r\n        if (e._allTouches.length == 2) {\r\n            this.distance = 0;\r\n            this.distance = Vec2.distance(e._allTouches[0]._point, e._allTouches[1]._point);\r\n        }\r\n\r\n        this.touchStart = e.getUILocation();\r\n        Vec2.subtract(this.offSet, this.node.getParent().getPosition() as unknown as Vec2, this.touchStart);\r\n        console.log(\"heyys\", this.cardace, this.cardNumber);\r\n        console.log(\"Parent\", this.node.getParent().name)\r\n\r\n    }\r\n    onMoveStart(e: Touch | null) {\r\n        // if (e._allTouches.length == 1) {\r\n\r\n        // this.move(e);\r\n        // }\r\n        this.lastPosition = e.getUILocation();\r\n        Vec2.subtract(this.offSet, this.touchStart, this.lastPosition);\r\n        let nodePos = this.node.getPosition() as unknown as Vec2;\r\n        this.node.setPosition(nodePos.x - this.offSet.x, nodePos.y - this.offSet.y, 0.5);\r\n        this.touchStart = this.lastPosition;\r\n        window.moveCard = true;\r\n\r\n        //console.log(\"heyys3 \", this.node.getPosition());\r\n        //  console.log(\"lastPos\", this.lastPosition)\r\n        // this.node.worldPosition = this.newPosition;\r\n        // this.newPosition = new Vec3(nodePos.x - this.offSet.x, nodePos.y - this.offSet.y, 0.);\r\n        //this.getComponent(Card).mainArea();\r\n    }\r\n    onTouchEnd(e: Touch) {\r\n        this.node.setSiblingIndex(1);\r\n    }\r\n}\r\n\r\n\r\n"]}