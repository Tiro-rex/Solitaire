{"version":3,"sources":["file:///D:/GAMIXLABS/Solitaire/assets/Script/GameScreen.ts"],"names":["_decorator","Component","Node","Prefab","instantiate","Button","CARDS_ARRAY","GameManager","ReaveldCard","ccclass","property","GameScreen","arrayOfCard","arrayOfCard2","h","OnLoad","start","OnClick","getDeckOfCard","deck","interactable","i","card","cardPrefeb","getComponent","init","splice","push","console","log","shuffleArray","array","length","j","Math","floor","random","temp","shuffledDeck","reaveldCard","addChild"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;AAA4CC,MAAAA,M,OAAAA,M;;AAGjFC,MAAAA,W,iBAAAA,W;;AACAC,MAAAA,W,iBAAAA,W;;AACFC,MAAAA,W;;;;;;;OACD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBV,U;;4BAGjBW,U,WADZF,OAAO,CAAC,YAAD,C,UAEHC,QAAQ,CAACP,MAAD,C,UAERO,QAAQ,CAACR,IAAD,C,UAERQ,QAAQ,CAACL,MAAD,C,UAERK,QAAQ;AAAA;AAAA,qC,2BARb,MACaC,UADb,SACgCV,SADhC,CAC0C;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAYtCW,WAZsC,GAYjB,EAZiB;AAAA,eAatCC,YAbsC,GAahB,EAbgB;AAAA,eActCC,CAdsC;AAAA;;AAiBtCC,QAAAA,MAAM,GAAG,CACL;AAEH;;AACDC,QAAAA,KAAK,GAAG;AACJ,eAAKH,YAAL;AAAA;AAAA;AAEH;;AACDI,QAAAA,OAAO,GAAG;AACN,eAAKC,aAAL;;AAEA,cAAI,KAAKJ,CAAL,IAAU,EAAd,EAAkB;AACd,iBAAKK,IAAL,CAAUC,YAAV,GAAyB,KAAzB;AAEH,WANK,CAON;;AACH;;AAGDF,QAAAA,aAAa,GAAG;AACZ;AACA,eAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzB,gBAAIC,IAAI,GAAGlB,WAAW,CAAC,KAAKmB,UAAN,CAAtB,CADyB,CAGzB;;AAEAD,YAAAA,IAAI,CAACE,YAAL;AAAA;AAAA,4CAA+BC,IAA/B,CAAoC,KAAKZ,YAAL,CAAkB,CAAlB,CAApC;AACA,iBAAKA,YAAL,CAAkBa,MAAlB,CAAyB,CAAzB,EAA4B,CAA5B;AAEA,iBAAKZ,CAAL,GAAS,KAAKF,WAAL,CAAiBe,IAAjB,CAAsBL,IAAtB,CAAT;AACAM,YAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,KAAKf,CAA1B,EATyB,CAUzB;;AACA,gBAAMgB,YAAY,GAAGC,KAAK,IAAI;AAC1B,mBAAK,IAAIV,EAAC,GAAGU,KAAK,CAACC,MAAN,GAAe,CAA5B,EAA+BX,EAAC,GAAG,CAAnC,EAAsCA,EAAC,EAAvC,EAA2C;AACvC,oBAAMY,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBf,EAAC,GAAG,CAArB,CAAX,CAAV;AACA,oBAAMgB,IAAI,GAAGN,KAAK,CAACV,EAAD,CAAlB;AACAU,gBAAAA,KAAK,CAACV,EAAD,CAAL,GAAWU,KAAK,CAACE,CAAD,CAAhB;AACAF,gBAAAA,KAAK,CAACE,CAAD,CAAL,GAAWI,IAAX;AACH;;AAED,qBAAON,KAAP;AACH,aATD;;AAWA,gBAAMO,YAAY,GAAGR,YAAY,CAACR,IAAD,CAAjC;AACA,iBAAKiB,WAAL,CAAiBC,QAAjB,CAA0BlB,IAA1B;AACH;AACJ;;AA/DqC,O","sourcesContent":["\nimport { _decorator, Component, Node, Prefab, instantiate, EventMouse, Touch, Vec2, Vec3, Button } from 'cc';\nimport { Card } from './Card';\n\nimport { CARDS_ARRAY } from './GameConstant';\nimport { GameManager } from './GameManager';\nimport ReaveldCard from './ReaveldCard';\nconst { ccclass, property } = _decorator;\n\n@ccclass('GameScreen')\nexport class GameScreen extends Component {\n    @property(Prefab)\n    cardPrefeb: Prefab;\n    @property(Node)\n    reaveldCard: Node;\n    @property(Button)\n    deck: (Button);\n    @property(GameManager)\n    game: GameManager;\n\n\n\n    arrayOfCard: any[] = [];\n    arrayOfCard2: any[] = [];\n    h: any\n\n\n    OnLoad() {\n        // Deck.make()\n\n    }\n    start() {\n        this.arrayOfCard2 = CARDS_ARRAY;\n\n    }\n    OnClick() {\n        this.getDeckOfCard();\n\n        if (this.h == 52) {\n            this.deck.interactable = false;\n\n        }\n        // this.getComponent(Card).init();\n    }\n\n\n    getDeckOfCard() {\n        //console.log(\"dhoom dhoom\");\n        for (let i = 0; i < 52; i++) {\n            let card = instantiate(this.cardPrefeb);\n\n            //card.getComponent(Card).randCardGenrate();\n\n            card.getComponent(ReaveldCard).init(this.arrayOfCard2[0]);\n            this.arrayOfCard2.splice(0, 1);\n\n            this.h = this.arrayOfCard.push(card);\n            console.log(\"Array\", this.h);\n            // Shuffle the deck of cards\n            const shuffleArray = array => {\n                for (let i = array.length - 1; i > 0; i--) {\n                    const j = Math.floor(Math.random() * (i + 1));\n                    const temp = array[i];\n                    array[i] = array[j];\n                    array[j] = temp;\n                }\n\n                return array\n            }\n\n            const shuffledDeck = shuffleArray(card)\n            this.reaveldCard.addChild(card);\n        }\n    }\n\n\n}\n\n"]}