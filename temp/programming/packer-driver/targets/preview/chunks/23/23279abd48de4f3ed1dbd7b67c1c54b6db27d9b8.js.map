{"version":3,"sources":["file:///D:/GAMIXLABS/Solitaire/assets/Script/GameController.ts"],"names":["_decorator","Component","Node","Vec3","Vec2","ccclass","property","GameController","distance","touchStart","newPosition","offSet","isMoving","OnLoad","cardDeck","node","on","EventType","TOUCH_START","onTouchStart","bind","TOUCH_MOVE","onMoveStart","TOUCH_END","onTouchEnd","e","_allTouches","length","_point","getUILocation","onMove","swapNode","uiPosition","subtract","nodePos","getWorldPosition","xAsis","x","yAxis","y","start","update","deltaTime"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Vec3, Vec2,Touch,EventMouse } from 'cc';\nimport Deck from './DeckOfCard'\nconst { ccclass, property } = _decorator;\n\n@ccclass('GameController')\nexport class GameController extends Component {\n\n    @property(Node)\n    cardDeck: Deck;\n    distance=0;\n    touchStart = new Vec2();\n    newPosition = new Vec3();\n    offSet = new Vec2();\n    isMoving: boolean = false;\n\n\n\n    OnLoad() {\n        this.cardDeck.node.on(Node.EventType.TOUCH_START, this.onTouchStart.bind(this));\n        this.cardDeck.node.on(Node.EventType.TOUCH_MOVE, this.onMoveStart.bind(this));\n        this.cardDeck.node.on(Node.EventType.TOUCH_END, this.onTouchEnd.bind(this));\n    }\n    onTouchStart(e: Touch) {\n        // console.log('onTouchStart camera : ', e.getUILocation());\n        // this.touch = true;\n        if (e._allTouches.length == 2) {\n            this.distance = 0;\n            this.distance = Vec2.distance(e._allTouches[0]._point, e._allTouches[1]._point);\n        }\n        this.touchStart = e.getUILocation();\n\n    }\n    onMove(e: Touch) {\n        // this.lastPosition = this.node.getWorldPosition() as unknown as Vec2;\n       if (e._allTouches.length == 1) {\n\n            this.swapNode(e);\n            this.isMoving = true;\n        }\n    }\n    swapNode(e) {\n        // this.node.worldPosition = new Vec3(this.lastPosition.x, this.lastPosition.y, 0);\n        let uiPosition = e.getUILocation();\n        Vec2.subtract(this.offSet, uiPosition, this.onTouchStart);\n        this.touchStart = uiPosition;\n        let nodePos = this.node.getWorldPosition() as unknown as Vec2;\n        let xAsis = nodePos.x - this.offSet.x;\n        let yAxis = nodePos.y - this.offSet.y;\n        \n            // console.log(\"xAxis yAxis : \", xAsis, yAxis);\n            this.newPosition = new Vec3(nodePos.x - this.offSet.x, nodePos.y - this.offSet.y, 0);\n        \n    }\n\n    start() {\n    }\n\n    update(deltaTime: number) {\n\n    }\n}\n\n"]}