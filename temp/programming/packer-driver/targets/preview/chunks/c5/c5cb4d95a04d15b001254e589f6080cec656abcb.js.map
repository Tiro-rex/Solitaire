{"version":3,"sources":["file:///D:/GAMIXLABS/Solitaire/assets/Script/Pile.ts"],"names":["_decorator","Component","Prefab","instantiate","Collider2D","PhysicsSystem2D","Contact2DType","ActionTypes","ReaveldCard","ccclass","property","Pile","arrayOfCard","h2","start","stacklogic","instance","enable","coll","node","getComponent","on","BEGIN_CONTACT","onBeginContact","self","other","tag","MOVE_CARD","console","log","i","card1","cardPrefeb","init","splice","delay","addChild","push","lastCard","children","length","faceDown","active","faceUp","milliseconds","count","Promise","resolve","setTimeout"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Prefab, instantiate, EventMouse, Touch, Vec2, Vec3, Button, Collider2D, PhysicsSystem2D, Contact2DType } from 'cc';\nimport { Card } from './Card';\nimport { ActionTypes, CARDS_ARRAY } from './GameConstant';\nimport { GameManager } from './GameManager';\nimport ReaveldCard from './ReaveldCard';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Pile')\nexport class Pile extends Component {\n    @property(Prefab)\n    cardPrefeb: Prefab;\n\n    arrayOfCard: any[] = [];\n    h2: number;\n\n    start() {\n        this.stacklogic();\n        PhysicsSystem2D.instance.enable = true;\n        let coll = this.node.getComponent(Collider2D);\n        coll.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\n    }\n    onBeginContact(self: Collider2D, other: Collider2D) {\n\n        if (self.tag == 1 || ActionTypes.MOVE_CARD) {\n            console.log(\"stack1\");\n        }\n        if (self.tag == 2) {\n            console.log(\"stack2\");\n        }\n        if (self.tag == 3) {\n            console.log(\"stack3\");\n        }\n        if (self.tag == 4) {\n            console.log(\"stack4\");\n        }\n        if (self.tag == 5) {\n            console.log(\"stack5\");\n        }\n        if (self.tag == 6) {\n            console.log(\"stack6\");\n        }\n        if (self.tag == 7) {\n            console.log(\"stack7\");\n        }\n\n        // let selfcollider = event.selfCollider;\n        // let otherCollider = event.otherCollider;\n        // console.log(\"self\", selfcollider);\n        // console.log(\"other\", otherCollider);\n    }\n    async stacklogic() {\n\n        for (let i = 0; i < 7; i++) {\n            let card1 = instantiate(this.cardPrefeb);\n            card1.getComponent(ReaveldCard).init(this.arrayOfCard[0]);\n            this.arrayOfCard.splice(0, 1);\n            await this.delay(200, this.node.addChild(card1));\n            this.h2 = this.arrayOfCard.push(card1);\n        }\n        let lastCard: ReaveldCard = this.node.children[this.node.children.length - 1].getComponent(ReaveldCard)\n        lastCard.faceDown.active = false;\n        lastCard.faceUp.active = true;\n        // console.log(\"last\", this.lastindex);\n        //console.log(\"array\", this.h2);\n    }\n    delay(milliseconds: number, count): Promise<number> {\n        return new Promise<number>(resolve => {\n            setTimeout(() => {\n                resolve(count);\n            }, milliseconds);\n        });\n    }\n}"]}