{"version":3,"sources":["file:///D:/GAMIXLABS/Solitaire%20-%20Copy/assets/Script/Pile.ts"],"names":["_decorator","Component","ReaveldCard","ccclass","property","Pile","offCard","cardR","snapParent","init","array","len","count","i","delay","node","addChild","children","getComponent","faceDown","active","milliseconds","method","Promise","resolve","setTimeout"],"mappings":";;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;AAIdC,MAAAA,W;;;;;;;OACD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;sBAIjBK,I,WADZF,OAAO,CAAC,MAAD,C,gBAAR,MACaE,IADb,SAC0BJ,SAD1B,CACoC;AAAA;AAAA;AAAA,eAIhCK,OAJgC;AAAA,eAMzBC,KANyB;AAAA,eAOhCC,UAPgC;AAAA;;AAS1BC,QAAAA,IAAI,CAACC,KAAD,EAAQC,GAAR,EAAaC,KAAb,EAAoB;AAAA;;AAAA;AAE1B,iBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAApB,EAAyBE,CAAC,EAA1B,EAA8B;AAC1B,oBAAM,KAAI,CAACC,KAAL,CAAW,GAAX,EAAgB,KAAI,CAACC,IAAL,CAAUC,QAAV,CAAmBN,KAAK,CAACE,KAAK,GAAGC,CAAT,CAAxB,CAAhB,CAAN;AAEH;;AAED,YAAA,KAAI,CAACE,IAAL,CAAUE,QAAV,CAAmBN,GAAG,GAAG,CAAzB,EAA4BO,YAA5B;AAAA;AAAA,4CAAsDC,QAAtD,CAA+DC,MAA/D,GAAwE,KAAxE;AAP0B;AAS7B;;AAEDN,QAAAA,KAAK,CAACO,YAAD,EAAuBC,MAAvB,EAAgD;AACjD,iBAAO,IAAIC,OAAJ,CAAoBC,OAAO,IAAI;AAClCC,YAAAA,UAAU,CAAC,MAAM;AACbD,cAAAA,OAAO,CAACF,MAAD,CAAP;AACH,aAFS,EAEPD,YAFO,CAAV;AAGH,WAJM,CAAP;AAKH;;AA1B+B,O","sourcesContent":["import { _decorator, Component, Node, Prefab, instantiate, EventMouse, Touch, Vec2, Vec3, Button, Collider2D, PhysicsSystem2D, Contact2DType, game } from 'cc';\nimport { Card } from './Card';\nimport { cardMove, CARDS_ARRAY, Ranks, snapLogic } from './GameConstant';\nimport { GameScreen } from './GameScreen';\nimport ReaveldCard from './ReaveldCard';\nconst { ccclass, property } = _decorator;\n\n\n@ccclass('Pile')\nexport class Pile extends Component {\n    // @property(Node)\n    // deckOfCard: Node;\n\n    offCard: any[];\n\n    public cardR: any;\n    snapParent: any;\n\n    async init(array, len, count) {\n    \n        for (let i = 0; i < len; i++) {\n            await this.delay(200, this.node.addChild(array[count + i]));\n\n        }\n        \n        this.node.children[len - 1].getComponent(ReaveldCard).faceDown.active = false;\n\n    }\n\n    delay(milliseconds: number, method): Promise<number> {\n        return new Promise<number>(resolve => {\n            setTimeout(() => {\n                resolve(method);\n            }, milliseconds);\n        });\n    }\n}"]}