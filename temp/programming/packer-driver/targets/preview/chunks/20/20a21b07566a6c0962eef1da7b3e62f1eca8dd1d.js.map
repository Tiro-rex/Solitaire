{"version":3,"sources":["file:///D:/GAMIXLABS/Solitaire/assets/Script/Pile.ts"],"names":["_decorator","Component","Vec2","Collider2D","PhysicsSystem2D","Contact2DType","cardMove","ReaveldCard","ccclass","property","Pile","offSet","cardR","snapParent","snapcard","start","instance","enable","coll","node","getComponent","on","BEGIN_CONTACT","onBeginContact","init","array","len","count","i","delay","addChild","children","faceDown","active","self","other","tag","window","moveCard","snapCardToParent","console","log","card","length","getParent","removeChild","removeListener","SortAlgo","milliseconds","Promise","resolve","setTimeout"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Prefab, instantiate, EventMouse, Touch, Vec2, Vec3, Button, Collider2D, PhysicsSystem2D, Contact2DType } from 'cc';\nimport { Card } from './Card';\nimport { cardMove, CARDS_ARRAY } from './GameConstant';\nimport { GameScreen } from './GameScreen';\nimport ReaveldCard from './ReaveldCard';\nconst { ccclass, property } = _decorator;\n\n\n@ccclass('Pile')\nexport class Pile extends Component {\n\n    offSet = new Vec2();\n\n    public cardR: ReaveldCard;\n    snapParent: Node\n    snapcard: boolean = false;\n\n    start() {\n        PhysicsSystem2D.instance.enable = true;\n        let coll = this.node.getComponent(Collider2D);\n        coll.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\n        // this.cardR.getComponent(ReaveldCard)\n    }\n\n    async init(array, len, count) {\n        //console.log(array, len, count);\n        for (let i = 0; i < len; i++) {\n            await this.delay(200, this.node.addChild(array[count - 1 + i]));\n\n        }\n        this.node.children[len - 1].getComponent(ReaveldCard).faceDown.active = false;\n\n    }\n    onBeginContact(self: Collider2D, other: Collider2D) {\n        this.snapParent = self.node;\n        // other.node.getComponent(ReaveldCard)\n        if (self.tag == 1 && window.moveCard) {\n            // //let newPos = self.node.getPosition();\n            // this.node.addChild(other.node);\n            // console.log(\"Parent-->\", Parent)\n            // console.log(\"Postion collider\", newPos);\n            //other.node.setPosition(newPos);\n            //other.node.setSiblingIndex(1);\n            // console.log(\"stack-->\", self.tag);\n            cardMove.on(\"snapCard\", this.snapCardToParent, this)\n            this.snapcard = true;\n            console.log(\"here----> <\");\n        }\n        if (self.tag == 2 && window.moveCard) {\n            cardMove.on(\"snapCard\", this.snapCardToParent, this)\n\n            console.log(\"stack-->\", self.tag);\n        }\n        if (self.tag == 3 && window.moveCard) {\n            console.log(\"stack-->\", self.tag);\n            cardMove.on(\"snapCard\", this.snapCardToParent, this)\n        }\n        if (self.tag == 4 && window.moveCard) {\n            cardMove.on(\"snapCard\", this.snapCardToParent, this)\n            console.log(\"stack-->\", self.tag);\n        }\n        if (self.tag == 5 && window.moveCard) {\n            cardMove.on(\"snapCard\", this.snapCardToParent, this)\n            console.log(\"stack-->\", self.tag);\n        }\n        if (self.tag == 6 && window.moveCard) {\n            cardMove.on(\"snapCard\", this.snapCardToParent, this)\n            console.log(\"stack-->\", self.tag);\n        }\n        if (self.tag == 7 && window.moveCard) {\n            cardMove.on(\"snapCard\", this.snapCardToParent, this)\n            console.log(\"stack-->\", self.tag);\n        }\n    }\n\n\n    snapCardToParent(card, len) {\n        // console.log(\"Card In Snap\", card);\n        console.log(\"before 1-->\", this.snapParent.children.length);\n        console.log(\"before 2-->\", this.node.children.length);\n        if (this.snapcard) {\n            card.getParent().removeChild(card);\n            console.log(\"gegererege\", card.getParent());\n            this.node.children[len - 1].getComponent(ReaveldCard).faceDown.active = false;\n\n        }\n        this.snapParent.addChild(card);\n        console.log(\"after 1-->\", this.snapParent.children.length);\n        console.log(\"after 2-->\", this.node.children.length);\n\n        cardMove.removeListener(\"snapCard\", this.snapCardToParent, this)\n    }\n\n    //Algo\n    SortAlgo() {\n        ///  this.node.removeChild\n    }\n    delay(milliseconds: number, count): Promise<number> {\n        return new Promise<number>(resolve => {\n            setTimeout(() => {\n                resolve(count);\n            }, milliseconds);\n        });\n    }\n}"]}