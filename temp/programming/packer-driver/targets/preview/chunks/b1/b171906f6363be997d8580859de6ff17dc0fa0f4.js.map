{"version":3,"sources":["file:///D:/GAMIXLABS/Solitaire/assets/Script/ReaveldCard.ts"],"names":["_decorator","Component","Node","Label","Vec2","Vec3","ccclass","property","ReaveldCard","cardColor","cardFace","cardNumber","isMoving","distance","touchStart","offSet","newPosition","lastPosition","touchTracking_","touchId_","touchInDeadZone_","touchStartX_","touchStartY_","lastTouchEndTimeStamp_","init","node","on","EventType","TOUCH_START","onTouchStart","bind","TOUCH_MOVE","onMoveStart","TOUCH_END","onTouchEnd","e","id","x","y","timeStamp","console","log","getUILocation","dx","dy","dLenSq","dlen","Math","sqrt","worldPosition","TOUCH_DEADZONE","TOUCH_DEADZONE_SQ"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, TERRAIN_HEIGHT_BASE, color, Label, Vec2, Vec3, Touch } from 'cc';\nimport { Color, Ranks, Suits } from './GameConstant';\nimport { CARDS_ARRAY } from './GameConstant';\nconst { ccclass, property } = _decorator;\n\n\n@ccclass('ReaveldCard')\nexport default class ReaveldCard extends Component {\n    @property(Label)\n    cardRank: Label;\n    @property(Label)\n    cardface: Label;\n\n\n    cardColor: string;\n    cardFace: string;\n    cardNumber: string;\n    isMoving: boolean;\n    distance: number;\n    touchStart = new Vec2();\n    offSet = new Vec2();\n    newPosition = new Vec3();\n    lastPosition = new Vec2()\n    private touchTracking_ = false;\n    private touchId_ = 0;\n    private touchInDeadZone_ = false;\n    private touchStartX_ = 0;\n    private touchStartY_ = 0;\n    private lastTouchEndTimeStamp_ = 0;\n    public static readonly TOUCH_DEADZONE = 5;\n    public static readonly TOUCH_DEADZONE_SQ = 5 * 5;\n\n\n\n    init() {\n        this.node.on(Node.EventType.TOUCH_START, this.onTouchStart.bind(this));\n        this.node.on(Node.EventType.TOUCH_MOVE, this.onMoveStart.bind(this));\n        this.node.on(Node.EventType.TOUCH_END, this.onTouchEnd.bind(this));\n    }\n    onTouchStart(e: Touch,id: number, x: number, y: number, timeStamp: number) {\n        if (!this.touchTracking_) {\n            this.touchId_ = id;\n            this.touchTracking_ = true;\n            this.touchInDeadZone_ = true;\n            this.touchStartX_ = x;\n            this.touchStartY_ = y;\n        }\n        \n        console.log(\"heyys\");\n\n        this.touchStart = e.getUILocation();\n        console.log(\"heyys\", this.touchStart);\n\n\n\n    }\n    onMoveStart(e: Touch,id: number, x: number, y: number, timeStamp: number) {\n        if (this.touchTracking_ && this.touchId_ === id) {\n            let dx = x - this.touchStartX_;\n            let dy = y - this.touchStartY_;\n\n            if (this.touchInDeadZone_) {\n                const dLenSq = dx * dx + dy * dy;\n                if (dLenSq > 5*5) {\n                    const dlen = Math.sqrt(dLenSq);\n                    dx /= dlen;\n                    dy /= dlen;\n                    this.touchStartX_ += 5 * dx;\n                    this.touchStartY_ += 5 * dy;\n                    this.touchInDeadZone_ = false;\n                }\n            }\n        }\n\n        console.log(\"heyys3 \", e.getUILocation);\n\n\n    }\n    onTouchEnd(e: Touch) {\n\n        console.log(\"heyys\", e);\n       // this.node.worldPosition = this.newPosition;\n        console.log(\"Position\", this.node.worldPosition);\n    }\n\n    \n\n    }\n\n\n"]}